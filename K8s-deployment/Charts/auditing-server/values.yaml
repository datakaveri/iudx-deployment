## @section Global parameters
## Global Docker image parameters
## Please, note that this will override the image parameters, including dependencies, configured to use the global value
## Current available global Docker image parameters: imageRegistry, imagePullSecrets and storageClass

## @param global.imageRegistry Global Docker image registry
## @param global.imagePullSecrets Global Docker registry secret names as an array
## @param global.storageClass Global StorageClass for Persistent Volume(s)
##
global:
  imageRegistry: ""
  ## E.g.
  ## imagePullSecrets:
  ##   - myRegistryKeySecretName
  ##
  imagePullSecrets: []
  storageClass: ""

## @section Common parameters

## @param nameSpace Namespace to deploy the controller

## @param kubeVersion Override Kubernetes version
##
kubeVersion: ""
## @param nameOverride String to partially override common.names.fullname
##
nameOverride: ""
## @param fullnameOverride String to fully override common.names.fullname
##
fullnameOverride: ""
## @param commonLabels Labels to add to all deployed objects
##
commonLabels: {}
## @param commonAnnotations Annotations to add to all deployed objects
##
commonAnnotations: {}
## @param clusterDomain Kubernetes cluster domain name
##
clusterDomain: cluster.local
## @param extraDeploy Array of extra objects to deploy with the release
##
extraDeploy: []

## Enable diagnostic mode in the deployment
##
diagnosticMode:
  ## @param diagnosticMode.enabled Enable diagnostic mode (all probes will be disabled and the command will be overridden)
  ##
  enabled: false
  ## @param diagnosticMode.command Command to override all containers in the deployment
  ##
  command:
    - sleep
  ## @param diagnosticMode.args Args to override all containers in the deployment
  ##
  args:
    - infinity

## @section Image Parameters

## %%MAIN_CONTAINER/POD_DESCRIPTION%%
##

  ## Bitnami image
  ## ref: https://hub.docker.com/r/bitnami/%%IMAGE_NAME%%/tags/
  ## @param image.registry image registry
  ## @param image.repository image repository
  ## @param image.tag image tag (immutable tags are recommended)
  ## @param image.pullPolicy image pull policy
  ## @param image.pullSecrets image pull secrets
  ## @param image.debug Enable image debug mode
  ##
image:
  registry: ghcr.io
  repository: datakaveri/auditing-server-depl
  tag: 5.5.0-72efce2
  pullSecrets: {} 
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
    ##
  pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    ## Enable debug mode
    ##
  debug: false
  
  ## @param containerPorts.http HTTP container port
  ## @param containerPorts.https  HTTPS container port
  ## @param containerPorts.hazelcast  Hazelcast container port
  ## @param containerPorts.prometheus  Prometheus container port


  ##
containerPorts:
  http: 8080
  https: 8443
  hazelcast: 5701
  prometheus: 9000

 ## @param podAnnotations Annotations for pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/

podAnnotations:
  prometheus.io/port: "9000"
  prometheus.io/scrape: "true"

## @section auditingServer Parameters
auditingServer:

  ## @param auditingServer.replicaCount Number of auditingServer replicas to deploy

  replicaCount: 1
  
  ## Configure extra options for auditingServer containers' liveness and readiness probes
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
  ## @param auditingServer.livenessProbe.enabled Enable livenessProbe on auditingServer containers
  ## @param auditingServer.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
  ## @param auditingServer.livenessProbe.periodSeconds Period seconds for livenessProbe
  ## @param auditingServer.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
  ## @param auditingServer.livenessProbe.failureThreshold Failure threshold for livenessProbe
  ## @param auditingServer.livenessProbe.successThreshold Success threshold for livenessProbe
  ## @param auditingServer.livenessProbe.path Path for httpGet
  ##
  livenessProbe:
    enabled: true
    path: /metrics
    initialDelaySeconds: 60
    periodSeconds: 60
    timeoutSeconds: 10
    #failureThreshold: 10
    #successThreshold: 10
  ## @param auditingServer.readinessProbe.enabled Enable readinessProbe on auditingServer containers
  ## @param auditingServer.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
  ## @param auditingServer.readinessProbe.periodSeconds Period seconds for readinessProbe
  ## @param auditingServer.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
  ## @param auditingServer.readinessProbe.failureThreshold Failure threshold for readinessProbe
  ## @param auditingServer.readinessProbe.successThreshold Success threshold for readinessProbe
  ##
  readinessProbe:
    enabled: false
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 10
    failureThreshold: 10
    successThreshold: 10
  ## @param auditingServer.startupProbe.enabled Enable startupProbe on auditingServer containers
  ## @param auditingServer.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
  ## @param auditingServer.startupProbe.periodSeconds Period seconds for startupProbe
  ## @param auditingServer.startupProbe.timeoutSeconds Timeout seconds for startupProbe
  ## @param auditingServer.startupProbe.failureThreshold Failure threshold for startupProbe
  ## @param auditingServer.startupProbe.successThreshold Success threshold for startupProbe
  ##
  startupProbe:
    enabled: false
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 10
    failureThreshold: 10
    successThreshold: 10
  ## @param auditingServer.customLivenessProbe Custom livenessProbe that overrides the default one
  ##
  customLivenessProbe: {}
  ## @param auditingServer.customReadinessProbe Custom readinessProbe that overrides the default one
  ##
  customReadinessProbe: {}
  ## @param auditingServer.customStartupProbe Custom startupProbe that overrides the default one
  ##
  customStartupProbe: {}
  ## auditingServer resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ## @param auditingServer.resources.limits The resources limits for the auditingServer containers
  ## @param auditingServer.resources.requests The requested resources for the auditingServer containers
  ##
  resources:
    limits:
      cpu: 600m
      memory: 750Mi
    requests: 
      cpu: 500m
      memory: 500Mi
  ## Configure Pods Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param auditingServer.podSecurityContext.enabled Enabled auditingServer pods' Security Context
  ## @param auditingServer.podSecurityContext.fsGroup Set auditingServer pod's Security Context fsGroup
  ##
  podSecurityContext:
    enabled: true
    runAsNonRoot: true
    runAsUser: 1001
    fsGroup: 1001
  ## Configure Container Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param auditingServer.containerSecurityContext.enabled Enabled auditingServer containers' Security Context
  ## @param auditingServer.containerSecurityContext.runAsUser Set auditingServer containers' Security Context runAsUser
  ## @param auditingServer.containerSecurityContext.runAsNonRoot Set auditingServer containers' Security Context runAsNonRoot
  ##
  containerSecurityContext:
    enabled: true
    runAsNonRoot: true
    runAsUser: 1001
    allowPrivilegeEscalation: false
    capabilities:
        drop:
          - ALL
    readOnlyRootFilesystem: true
   #%%OTHER_PARAMETERS_RELATED_TO_THIS_CONTAINER/POD%%
   ## @param auditingServer.existingConfigmap The name of an existing ConfigMap with your custom configuration for auditingServer
  ##
  existingConfigmap:
    
  ## @param auditingServer.command Override default container command (useful when using custom images)
  ##
  command: ["/bin/bash"]
  ## @param auditingServer.args Override default container args (useful when using custom images)
  ##
  args: ["-c","exec java -Xmx1024m -Dvertx.logger-delegate-factory-class-name=io.vertx.core.logging.Log4j2LogDelegateFactory  -jar ./fatjar.jar  --host $$MY_POD_IP -c secrets/configs/config.json"]
  ## @param auditingServer.hostAliases auditingServer pods host aliases
  ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
  ##
  hostAliases: []
  ## @param auditingServer.podLabels Extra labels for auditingServer pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  ##
  podLabels: {}
  
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  ## @param auditingServer.podAffinityPreset Pod affinity preset. Ignored if `auditingServer.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAffinityPreset: ""
  ## @param auditingServer.podAntiAffinityPreset Pod anti-affinity preset. Ignored if `auditingServer.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAntiAffinityPreset: ""
  ## Node auditingServer.affinity preset
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
  ##
  nodeAffinityPreset:
    ## @param auditingServer.nodeAffinityPreset.type Node affinity preset type. Ignored if `auditingServer.affinity` is set. Allowed values: `soft` or `hard`
    ##
    type: ""
    ## @param auditingServer.nodeAffinityPreset.key Node label key to match. Ignored if `auditingServer.affinity` is set
    ##
    key: ""
    ## @param auditingServer.nodeAffinityPreset.values Node label values to match. Ignored if `auditingServer.affinity` is set
    ## E.g.
    ## values:
    ##   - e2e-az1
    ##   - e2e-az2
    ##
    values: []
  ## @param auditingServer.affinity Affinity for auditingServer pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ## NOTE: `auditingServer.podAffinityPreset`, `auditingServer.podAntiAffinityPreset`, and `auditingServer.nodeAffinityPreset` will be ignored when it's set
  ##
  affinity: {}
  ## @param auditingServer.nodeSelector Node labels for auditingServer pods assignment
  ## ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}



  ## @param auditingServer.tolerations Tolerations for auditingServer pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []
  ## @param auditingServer.updateStrategy.type auditingServer statefulset strategy type
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
  ##
  updateStrategy:
    ## StrategyType
    ## Can be set to RollingUpdate or OnDelete
    ##
    ##type: RollingUpdate

  ## @param auditingServer.priorityClassName auditingServer pods' priorityClassName
  ##
  priorityClassName: ""
  ## @param auditingServer.schedulerName Name of the k8s scheduler (other than default) for auditingServer pods
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  schedulerName: ""
  ## @param auditingServer.lifecycleHooks for the auditingServer container(s) to automate configuration before or after startup
  ##
  lifecycleHooks: {}
  ## @param auditingServer.extraEnvVars Array with extra environment variables to add to auditingServer nodes
  ## e.g:
  ## extraEnvVars:
  ##   - name: FOO
  ##     value: "bar"
  ##
  extraEnvVars: []
  ## @param auditingServer.extraEnvVarsCM Name of existing ConfigMap containing extra env vars for auditingServer nodes
  ##
  extraEnvVarsCM: "auditing-env"
  ## @param auditingServer.extraEnvVarsSecret Name of existing Secret containing extra env vars for auditingServer nodes
  ##
  extraEnvVarsSecret:
  ## @param auditingServer.extraVolumes Optionally specify extra list of additional volumes for the auditingServer pod(s)
  ##
  extraVolumes:
    - name: auditing-config
      secret:
        secretName: auditing-config
    - name: auditing-tmp
      emptyDir:
        medium: Memory
    
  ## @param auditingServer.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the auditingServer container(s)
  ##
  extraVolumeMounts:
    - name: auditing-config
      mountPath: /usr/share/app/secrets/configs
    - name: auditing-tmp
      mountPath: /tmp

  ## @param auditingServer.sidecars Add additional sidecar containers to the auditingServer pod(s)
  ## e.g:
  ## sidecars:
  ## - name: your-image-name
  ##   image: your-image
  ##   imagePullPolicy: Always
   ##  ports:
  ##     - name: portname
  ##       containerPort: 1234
  ##
  sidecars: {}
  ## @param auditingServer.initContainers Add additional init containers to the auditingServer pod(s)
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
  ## e.g:
  ## initContainers:
  ##  - name: your-image-name
  ##    image: your-image
  ##    imagePullPolicy: Always
  ##    command: ['sh', '-c', 'echo "hello world"']
  ##
  initContainers: {}
  ## ref: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
  ## @param auditingServer.autoscaling.enabled Enable Horizontal POD autoscaling for Apache
  ## @param auditingServer.autoscaling.minReplicas Minimum number of Apache replicas
  ## @param auditingServer.autoscaling.maxReplicas Maximum number of Apache replicas
  ## @param auditingServer.autoscaling.targetCPU Target CPU utilization percentage
  ## @param auditingServer.autoscaling.targetMemory Target Memory utilization percentage
  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 5
    targetCPU: 80
      #targetMemory:

## %%SECONDARY_CONTAINER/POD_DESCRIPTION%%
##
#%%SECONDARY_OBJECT_BLOCK%%:
#  %%SAME_STRUCTURE_AS_THE_MAIN_CONTAINER/POD%%

## %%OTHERS_CONTAINER/POD_DESCRIPTION%%
##
#%%OTHER_OBJECT_BLOCK%%:
#  %%SAME_STRUCTURE_AS_THE_MAIN_CONTAINER/POD%%


## @section Init Container Parameters

## 'volumePermissions' init container parameters
## Changes the owner and group of the persistent volume mount point to runAsUser:fsGroup values
##   based on the *podSecurityContext/*containerSecurityContext parameters
##
volumePermissions:
  ## @param volumePermissions.enabled Enable init container that changes the owner/group of the PV mount point to `runAsUser:fsGroup`
  ##
  enabled: false
  ## Bitnami Shell image
  ## ref: https://hub.docker.com/r/bitnami/bitnami-shell/tags/
  ## @param volumePermissions.image.registry Bitnami Shell image registry
  ## @param volumePermissions.image.repository Bitnami Shell image repository
  ## @param volumePermissions.image.tag Bitnami Shell image tag (immutable tags are recommended)
  ## @param volumePermissions.image.pullPolicy Bitnami Shell image pull policy
  ## @param volumePermissions.image.pullSecrets Bitnami Shell image pull secrets
  ##
  image:
    registry: docker.io
    repository: bitnami/bitnami-shell
    tag: 10-debian-10-r%%IMAGE_REVISION%%
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
  ## Init container's resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ## @param volumePermissions.resources.limits The resources limits for the init container
  ## @param volumePermissions.resources.requests The requested resources for the init container
  ##
  resources:
    limits: {}
    requests: {}
  ## Init container Container Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
  ## @param volumePermissions.containerSecurityContext.runAsUser Set init container's Security Context runAsUser
  ## NOTE: when runAsUser is set to special value "auto", init container will try to chown the
  ##   data folder to auto-determined user&group, using commands: `id -u`:`id -G | cut -d" " -f2`
  ##   "auto" is especially useful for OpenShift which has scc with dynamic user ids (and 0 is not allowed)
  ##
  containerSecurityContext:
    runAsUser: 0

## @section Other Parameters


## ServiceAccount configuration
##
serviceAccount:
  ## @param serviceAccount.create Specifies whether a ServiceAccount should be created
  ##
  create: false
  ## @param serviceAccount.name The name of the ServiceAccount to use.
  ## If not set and create is true, a name is generated using the common.names.fullname template
  ##
  name: ""
