ingress:
  hostname: rs-proxy-hostname
  annotations: {
    cert-manager.io/cluster-issuer: "letsencrypt-staging" # use letsencrypt-prod if proper letsencrypt certs are required
  }
  
## apiServer resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
## @param apiServer.resources.limits The resources limits for the apiServer containers
## @param apiServer.resources.requests The requested resources for the apiServer containers
##
apiServer:
  enabled: true
  nodeSelector:
    node.kubernetes.io/instance-type: t3a.medium
  resources:
    limits:
      cpu: 1000m
      memory: 1.2Gi
    requests: 
      cpu: 700m
      memory: 1.2Gi

## authenticator resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
## @param authenticator.resources.limits The resources limits for the authenticator containers
## @param authenticator.resources.requests The requested resources for the authenticator containers
##
authenticator:
  enabled: true
  nodeSelector:
    node.kubernetes.io/instance-type: t3a.medium
  resources:
    limits:
      cpu: 600m
      memory: 750Mi
    requests: 
      cpu: 500m
      memory: 500Mi

## databroker resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
## @param databroker.resources.limits The resources limits for the databroker containers
## @param databroker.resources.requests The requested resources for the databroker containers
##
databroker:
  enabled: true
  nodeSelector:
    node.kubernetes.io/instance-type: t3a.medium
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests: 
      cpu: 400m
      memory: 400Mi

## metering resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
## @param metering.resources.limits The resources limits for the metering containers
## @param metering.resources.requests The requested resources for the metering containers
##
metering:
  enabled: true
  nodeSelector:
    node.kubernetes.io/instance-type: t3a.medium
  resources:
    limits:
      cpu: 700m
      memory: 1Gi
    requests: 
      cpu: 500m
      memory: 800Mi

## database resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
## @param database.resources.limits The resources limits for the database containers
## @param database.resources.requests The requested resources for the database containers
##
database:
  enabled: true
  nodeSelector:
    node.kubernetes.io/instance-type: t3a.medium
  resources:
    limits:
      cpu: 600m
      memory: 600Mi
    requests: 
      cpu: 400m
      memory: 400Mi

## cache resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
## @param cache.resources.limits The resources limits for the cache containers
## @param cache.resources.requests The requested resources for the cache containers
##
cache:
  enabled: true
  nodeSelector:
    node.kubernetes.io/instance-type: t3a.medium
  resources:
    limits:
      cpu: 400m
      memory: 750Mi
    requests: 
      cpu: 200m
      memory: 600Mi
