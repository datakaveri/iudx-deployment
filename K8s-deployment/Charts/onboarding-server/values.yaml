## @section Global parameters
## Global Docker image parameters
## Please, note that this will override the image parameters, including dependencies, configured to use the global value
## Current available global Docker image parameters: imageRegistry, imagePullSecrets and storageClass

## @param global.imageRegistry Global Docker image registry
## @param global.imagePullSecrets Global Docker registry secret names as an array
## @param global.storageClass Global StorageClass for Persistent Volume(s)
##
global:
  imageRegistry: ""
  ## E.g.
  ## imagePullSecrets:
  ##   - myRegistryKeySecretName
  ##
  imagePullSecrets: []
  storageClass: ""

## @section Common parameters

## @param kubeVersion Override Kubernetes version
##
kubeVersion: ""
## @param nameOverride String to partially override common.names.fullname
##
nameOverride: ""
## @param fullnameOverride String to fully override common.names.fullname
##
fullnameOverride: ""
## @param commonLabels Labels to add to all deployed objects
##
commonLabels: {}
## @param commonAnnotations Annotations to add to all deployed objects
##
commonAnnotations: {}
## @param clusterDomain Kubernetes cluster domain name
##
clusterDomain: cluster.local
## @param extraDeploy Array of extra objects to deploy with the release
##
extraDeploy: []

## Enable diagnostic mode in the deployment
##
diagnosticMode:
  ## @param diagnosticMode.enabled Enable diagnostic mode (all probes will be disabled and the command will be overridden)
  ##
  enabled: false
  ## @param diagnosticMode.command Command to override all containers in the deployment
  ##
  command:
    - sleep
  ## @param diagnosticMode.args Args to override all containers in the deployment
  ##
  args:
    - infinity

## @section Image Parameters

## %%MAIN_CONTAINER/POD_DESCRIPTION%%
##

  ## Bitnami %%MAIN_CONTAINER%% image
  ## ref: https://hub.docker.com/r/bitnami/%%IMAGE_NAME%%/tags/
  ## @param image.registry %%MAIN_CONTAINER%% image registry
  ## @param image.repository %%MAIN_CONTAINER%% image repository
  ## @param image.tag %%MAIN_CONTAINER%% image tag (immutable tags are recommended)
  ## @param image.pullPolicy %%MAIN_CONTAINER%% image pull policy
  ## @param image.pullSecrets %%MAIN_CONTAINER%% image pull secrets
  ## @param image.debug Enable %%MAIN_CONTAINER%% image debug mode
  ##
image:
  registry: ghcr.io
  repository: datakaveri/onboarding-server-depl
  tag: 1.0.1-229ff0b
  pullSecrets: 
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
    ##
  pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    ## Enable debug mode
    ##
  debug: false
  
  ## @param containerPorts.http HTTP container port
  ## @param containerPorts.https  HTTPS container port
  ## @param containerPorts.hazelcast  Hazelcast container port
  ## @param containerPorts.prometheus  Prometheus container port

containerPorts:
  http: 8080
  #https: 443
  hazelcast: 5701
  prometheus: 9000

## @param podAnnotations Annotations for pods
## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/

podAnnotations:
  prometheus.io/port: "9000"
  prometheus.io/scrape: "true"

## @section onboardingServer Parameters
onboardingServer:

## @param onboardingServer.replicaCount Number of onboardingServer replicas to deploy
  ##
  replicaCount: 1
  
  ## Configure extra options for onboardingServer containers' liveness and readiness probes
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
  ## @param onboardingServer.livenessProbe.enabled Enable livenessProbe on onboardingServer containers
  ## @param onboardingServer.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
  ## @param onboardingServer.livenessProbe.periodSeconds Period seconds for livenessProbe
  ## @param onboardingServer.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
  ## @param onboardingServer.livenessProbe.failureThreshold Failure threshold for livenessProbe
  ## @param onboardingServer.livenessProbe.successThreshold Success threshold for livenessProbe
  ## @param onboardingServer.livenessProbe.path Path for httpGet
  ##
  livenessProbe:
    enabled: true
    path: /metrics
    initialDelaySeconds: 60
    periodSeconds: 60
    timeoutSeconds: 10
    #failureThreshold: 10
    #successThreshold: 10
  ## @param onboardingServer.readinessProbe.enabled Enable readinessProbe on onboardingServer containers
  ## @param onboardingServer.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
  ## @param onboardingServer.readinessProbe.periodSeconds Period seconds for readinessProbe
  ## @param onboardingServer.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
  ## @param onboardingServer.readinessProbe.failureThreshold Failure threshold for readinessProbe
  ## @param onboardingServer.readinessProbe.successThreshold Success threshold for readinessProbe
  ##
  readinessProbe:
    enabled: false
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 10
    failureThreshold: 10
    successThreshold: 10
  ## @param onboardingServer.startupProbe.enabled Enable startupProbe on onboardingServer containers
  ## @param onboardingServer.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
  ## @param onboardingServer.startupProbe.periodSeconds Period seconds for startupProbe
  ## @param onboardingServer.startupProbe.timeoutSeconds Timeout seconds for startupProbe
  ## @param onboardingServer.startupProbe.failureThreshold Failure threshold for startupProbe
  ## @param onboardingServer.startupProbe.successThreshold Success threshold for startupProbe
  ##
  startupProbe:
    enabled: false
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 10
    failureThreshold: 10
    successThreshold: 10
  ## @param onboardingServer.customLivenessProbe Custom livenessProbe that overrides the default one
  ##
  customLivenessProbe: {}
  ## @param onboardingServer.customReadinessProbe Custom readinessProbe that overrides the default one
  ##
  customReadinessProbe: {}
  ## @param onboardingServer.customStartupProbe Custom startupProbe that overrides the default one
  ##
  customStartupProbe: {}

  ## Configure Pods Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param onboardingServer.podSecurityContext.enabled Enabled onboardingServer pods' Security Context
  ## @param onboardingServer.podSecurityContext.fsGroup Set onboardingServer pod's Security Context fsGroup
  ##
  podSecurityContext:
    enabled: true
    runAsNonRoot: true
    runAsUser: 1001
    fsGroup: 1001
  ## Configure Container Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param onboardingServer.containerSecurityContext.enabled Enabled onboardingServer containers' Security Context
  ## @param onboardingServer.containerSecurityContext.runAsUser Set onboardingServer containers' Security Context runAsUser
  ## @param onboardingServer.containerSecurityContext.runAsNonRoot Set onboardingServer containers' Security Context runAsNonRoot
  ##
  containerSecurityContext:
    enabled: true
    runAsNonRoot: true
    runAsUser: 1001
    allowPrivilegeEscalation: false
    capabilities:
        drop:
          - ALL
    readOnlyRootFilesystem: true
   #%%OTHER_PARAMETERS_RELATED_TO_THIS_CONTAINER/POD%%
   ## @param onboardingServer.existingConfigmap The name of an existing ConfigMap with your custom configuration for onboardingServer
  ##
  existingConfigmap:
    
  ## @param onboardingServer.command Override default container command (useful when using custom images)
  ##
  command: ["/bin/bash"]
  ## @param onboardingServer.args Override default container args (useful when using custom images)
  ##
  
  args: ["-c","exec java $$ONBOARDING_JAVA_OPTS  -Dvertx.logger-delegate-factory-class-name=io.vertx.core.logging.Log4j2LogDelegateFactory -jar ./fatjar.jar  --host $$MY_POD_IP -c secrets/configs/config.json"]
  ## @param onboardingServer.hostAliases onboardingServer pods host aliases
  ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
  ##
  hostAliases: []
  ## @param onboardingServer.podLabels Extra labels for onboardingServer pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  ##
  podLabels: {}
  ## @param onboardingServer.podAnnotations Annotations for onboardingServer pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  ## @param onboardingServer.podAffinityPreset Pod affinity preset. Ignored if `onboardingServer.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAffinityPreset: ""
  ## @param onboardingServer.podAntiAffinityPreset Pod anti-affinity preset. Ignored if `onboardingServer.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAntiAffinityPreset: ""
  ## Node onboardingServer.affinity preset
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
  ##
  nodeAffinityPreset:
    ## @param onboardingServer.nodeAffinityPreset.type Node affinity preset type. Ignored if `onboardingServer.affinity` is set. Allowed values: `soft` or `hard`
    ##
    type: ""
    ## @param onboardingServer.nodeAffinityPreset.key Node label key to match. Ignored if `onboardingServer.affinity` is set
    ##
    key: ""
    ## @param onboardingServer.nodeAffinityPreset.values Node label values to match. Ignored if `onboardingServer.affinity` is set
    ## E.g.
    ## values:
    ##   - e2e-az1
    ##   - e2e-az2
    ##
    values: []
  ## @param onboardingServer.affinity Affinity for onboardingServer pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ## NOTE: `onboardingServer.podAffinityPreset`, `onboardingServer.podAntiAffinityPreset`, and `onboardingServer.nodeAffinityPreset` will be ignored when it's set
  ##
  affinity: {}
  ## @param onboardingServer.nodeSelector Node labels for onboardingServer pods assignment
  ## ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector:

  ## @param onboardingServer.tolerations Tolerations for onboardingServer pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []
  ## @param onboardingServer.updateStrategy.type onboardingServer statefulset strategy type
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
  ##
  updateStrategy:
    ## StrategyType
    ## Can be set to RollingUpdate or OnDelete
    ##
    ##type: RollingUpdate
  ## @param onboardingServer.priorityClassName onboardingServer pods' priorityClassName
  ##
  priorityClassName: ""
  ## @param onboardingServer.schedulerName Name of the k8s scheduler (other than default) for onboardingServer pods
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  schedulerName: ""
  ## @param onboardingServer.lifecycleHooks for the onboardingServer container(s) to automate configuration before or after startup
  ##
  lifecycleHooks: {}
  ## @param onboardingServer.extraEnvVars Array with extra environment variables to add to onboardingServer nodes
  ## e.g:
  ## extraEnvVars:
  ##   - name: FOO
  ##     value: "bar"
  ##
  extraEnvVars: []
  ## @param onboardingServer.extraEnvVarsCM Name of existing ConfigMap containing extra env vars for onboardingServer nodes
  ##
  extraEnvVarsCM: "onboarding-env"
  ## @param onboardingServer.extraEnvVarsSecret Name of existing Secret containing extra env vars for onboardingServer nodes
  ##
  extraEnvVarsSecret:
  ## @param onboardingServer.extraVolumes Optionally specify extra list of additional volumes for the onboardingServer pod(s)
  ##
  extraVolumes:
    - name: onboarding-config
      secret:
        secretName: onboarding-config
    - name: onboarding-tmp
      emptyDir:
        medium: Memory
  ## @param onboardingServer.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the onboardingServer container(s)
  ##
  extraVolumeMounts: 
    - name: onboarding-config
      mountPath: /usr/share/app/secrets/configs
    - name: onboarding-tmp        
      mountPath: /tmp
  
  ## @param onboardingServer.sidecars Add additional sidecar containers to the onboardingServer pod(s)
  ## e.g:
  ## sidecars:
  ## - name: your-image-name
  ##     image: your-image
  ##     imagePullPolicy: Always
  ##     ports:
  ##       - name: portname
  ##         containerPort: 1234
  ##

  sidecars: {}
  ## @param onboardingServer.initContainers Add additional init containers to the onboardingServer pod(s)
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
  ## e.g:
  ## initContainers:
  ##  - name: your-image-name
  ##    image: your-image
  ##    imagePullPolicy: Always
  ##    command: ['sh', '-c', 'echo "hello world"']
  ##
  initContainers: {}
  ## ref: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
  ## @param onboardingServer.autoscaling.enabled Enable Horizontal POD autoscaling for Apache
  ## @param onboardingServer.autoscaling.minReplicas Minimum number of Apache replicas
  ## @param onboardingServer.autoscaling.maxReplicas Maximum number of Apache replicas
  ## @param onboardingServer.autoscaling.targetCPU Target CPU utilization percentage
  ## @param onboardingServer.autoscaling.targetMemory Target Memory utilization percentage

  
  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 7
    targetCPU: 80
    #targetMemory:

## @section Traffic Exposure Parameters

## onboardingServer service parameters
##
service:
  ## @param service.type ApiServer service type
  ##
  type: ClusterIP
  ## @param service.ports ApiServer service port
  ##
  ports: 80

  ## Node ports to expose

  ## NOTE: choose port between <30000-32767>
  ## @param service.targetPorts ApiServer service TargetPorts port
  ##
  targetPorts: 8080
  ## @param service.clusterIP ApiServer service Cluster IP
  ## e.g.:
  ## clusterIP: None
  ##
  clusterIP:
  ## @param service.loadBalancerIP onboardingServer service Load Balancer IP
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-loadbalancer
  ##
  loadBalancerIP:
  ## @param service.loadBalancerSourceRanges onboardingServer service Load Balancer sources
  ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
  ## e.g:
  ## loadBalancerSourceRanges:
  ##   - 10.10.10.0/24
  ##
  loadBalancerSourceRanges: []
  ## @param service.externalTrafficPolicy onboardingServer service external traffic policy
  ## ref http://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
  ##
  externalTrafficPolicy: Cluster
  ## @param service.annotations Additional custom annotations for onboardingServer service
  ##
  annotations: {}
  ## @param service.extraPorts Extra ports to expose in onboardingServer service (normally used with the `sidecars` value)
  ##
  extraPorts: []
## onboardingServer ingress parameters
## ref: http://kubernetes.io/docs/user-guide/ingress/
##
ingress:
  ## @param ingress.enabled Enable ingress record generation for onboardingServer
  ##
  enabled: true
  ## @param ingress.pathType Ingress path type
  ##
  pathType: ImplementationSpecific
  ## @param ingress.apiVersion Force Ingress API version (automatically detected if not set)
  ##
  apiVersion:
  ## @param ingress.hostname Default host for the ingress record
  ##
  hostname: onboarding-host
  ## @param ingress.path Default path for the ingress record
  ## NOTE: You may need to set this to '/*' in order to use this with ALB ingress controllers
  ##
  path: /onb
  ## @param ingress.annotations Additional annotations for the Ingress resource. To enable certificate autogeneration, place here your cert-manager annotations.
  ## Use this parameter to set the required annotations for cert-manager, see
  ## ref: https://cert-manager.io/docs/usage/ingress/#supported-annotations
  ## e.g:
  ## annotations:
  ##   kubernetes.io/ingress.class: nginx
  ##   cert-manager.io/cluster-issuer: cluster-issuer-name
  ##
  ##
  ## @param ingress.serviceName Backend ingress Service Name
  serviceName: "onboarding-api-server"
  annotations: {
    kubernetes.io/ingress.class: "nginx",
    nginx.ingress.kubernetes.io/global-rate-limit: "1000",
    nginx.ingress.kubernetes.io/global-rate-limit-key: $server_name,
    nginx.ingress.kubernetes.io/global-rate-limit-window: 1s,
    nginx.ingress.kubernetes.io/limit-burst-multiplier: "1",
    nginx.ingress.kubernetes.io/limit-connections: "100",
    nginx.ingress.kubernetes.io/limit-rps: "100"
  }
  ## @param ingress.tls Enable TLS configuration for the host defined at `ingress.hostname` parameter
  ## TLS certificates will be retrieved from a TLS secret with name: `{{- printf "%s-tls" .Values.ingress.hostname }}`
  ## You can:
  ##   - Use the `ingress.secrets` parameter to create this TLS secret
  ##   - Relay on cert-manager to create it by setting the corresponding annotations
  ##   - Relay on Helm to create self-signed certificates by setting `ingress.selfSigned=true`
  ##
  tls:
    secretName: onboarding-tls-secret
  ## @param ingress.selfSigned Create a TLS secret for this ingress record using self-signed certificates generated by Helm
  ##
  selfSigned: false
  ## @param ingress.extraHosts An array with additional hostname(s) to be covered with the ingress record
  ## e.g:
  ## extraHosts:
  ##   - name: %%COMPONENT_NAME%%.local
  ##     path: /
  ##
  extraHosts: []
  ## @param ingress.extraPaths An array with additional arbitrary paths that may need to be added to the ingress under the main host
  ## e.g:
  ## extraPaths:
  ## - path: /*
  ##   backend:
  ##     serviceName: ssl-redirect
  ##     servicePort: use-annotation
  ##
  extraPaths: []
  ## @param ingress.extraTls TLS configuration for additional hostname(s) to be covered with this ingress record
  ## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/#tls
  ## e.g:
  ## extraTls:
  ## - hosts:
  ##     - %%COMPONENT_NAME%%.local
  ##   secretName: %%COMPONENT_NAME%%.local-tls
  ##
  extraTls: []
  ## @param ingress.secrets Custom TLS certificates as secrets
  ## NOTE: 'key' and 'certificate' are expected in PEM format
  ## NOTE: 'name' should line up with a 'secretName' set further up
  ## If it is not set and you're using cert-manager, this is unneeded, as it will create a secret for you with valid certificates
  ## If it is not set and you're NOT using cert-manager either, self-signed certificates will be created valid for 365 days
  ## It is also possible to create and manage the certificates outside of this helm chart
  ## Please see README.md for more information
  ## e.g:
  ## secrets:
  ##   - name: %%COMPONENT_NAME%%.local-tls
  ##     key: |-
  ##       -----BEGIN RSA PRIVATE KEY-----
  ##       ...
  ##       -----END RSA PRIVATE KEY-----
  ##     certificate: |-
  ##       -----BEGIN CERTIFICATE-----
  ##       ...
  ##       -----END CERTIFICATE-----
  ##
  secrets: []
 #ingress:
  #enabled: true
  #rateLimitAnnotation: false
  #annotations: {}
  #hosts:
  #  - host: cat.test.io
  #    paths:
  #      - path: /
  #        pathType: ImplementationSpecific
  #tls: 
  #  - secretName: catalogue-tls-secret
  #    hosts:
  #     - cat.test.io



## @section Init Container Parameters

## 'volumePermissions' init container parameters
## Changes the owner and group of the persistent volume mount point to runAsUser:fsGroup values
##   based on the *podSecurityContext/*containerSecurityContext parameters
##
volumePermissions:
  ## @param volumePermissions.enabled Enable init container that changes the owner/group of the PV mount point to `runAsUser:fsGroup`
  ##
  enabled: false
  ## Bitnami Shell image
  ## ref: https://hub.docker.com/r/bitnami/bitnami-shell/tags/
  ## @param volumePermissions.image.registry Bitnami Shell image registry
  ## @param volumePermissions.image.repository Bitnami Shell image repository
  ## @param volumePermissions.image.tag Bitnami Shell image tag (immutable tags are recommended)
  ## @param volumePermissions.image.pullPolicy Bitnami Shell image pull policy
  ## @param volumePermissions.image.pullSecrets Bitnami Shell image pull secrets
  ##
  image:
    registry: docker.io
    repository: bitnami/bitnami-shell
    tag: 10-debian-10-r%%IMAGE_REVISION%%
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
  ## Init container's resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ## @param volumePermissions.resources.limits The resources limits for the init container
  ## @param volumePermissions.resources.requests The requested resources for the init container
  ##
  resources:
    limits: {}
    requests: {}
  ## Init container Container Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
  ## @param volumePermissions.containerSecurityContext.runAsUser Set init container's Security Context runAsUser
  ## NOTE: when runAsUser is set to special value "auto", init container will try to chown the
  ##   data folder to auto-determined user&group, using commands: `id -u`:`id -G | cut -d" " -f2`
  ##   "auto" is especially useful for OpenShift which has scc with dynamic user ids (and 0 is not allowed)
  ##
  containerSecurityContext:
    runAsUser: 0

## @section Other Parameters


## ServiceAccount configuration
##
serviceAccount:
  ## @param serviceAccount.create Specifies whether a ServiceAccount should be created
  ##
  create: false
  ## @param serviceAccount.name The name of the ServiceAccount to use.
  ## If not set and create is true, a name is generated using the common.names.fullname template
  ##
  name: ""
