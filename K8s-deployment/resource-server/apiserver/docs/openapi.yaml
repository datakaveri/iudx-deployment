openapi: 3.0.2

schemes:
  - "http"
  - "https"

produces:
  - "application/json"
  - "text/plain"

consumes:
  - "application/json"
  - "text/plain"

info:
  title: "IUDX Resource Server APIs"
  version: 1.0.0
  description: |
    The Resource Server is IUDX's data store which allows publication, subscription and discovery of data.
    For search and discovery, it allows users to search through temporal, geo-based and attribute queries. 
    For publication and subscription, it allows users to use AMQP streaming protocol over TLS.
    It enables *Providers* of datasources to publish data as per the IUDX data descriptor.
    It enables *Consumers* of datasources to search and query for data using HTTPs APIs.
    It enables *Subscribers* a.k.a [Streaming Consumer] of datasources to stream data using AMQP streaming protocol over TLS.
    
tags:
- name: Latest Entity
  x-displayName: "Latest Data"
  description: |
        A Spatial Search is used by IUDX Data *Consumers* for querying a resource using a <b>valid IUDX</b> `id`. <br/> If the resource is a <b> protected resource </b> a <b> valid IUDX Auth token </b> is <b> mandatory </b>  in the header parameter of the request.  <br/> Information about the IUDX ID of the resource and security scope of the resource can be obtained from the <b> IUDX catalogue server </b> .

- name: Spatial Entities
  x-displayName: "Spatial Search"
  description: |
        A Spatial Search is used by IUDX Data *Consumers* for querying a resource using a <b>valid IUDX</b> `id`, `spatial` and `attribute` parameters. <br/> If the resource is a <b> protected resource </b> a <b> valid IUDX Auth token </b> is <b> mandatory </b>  in the header parameter of the request.  <br/> Information about the IUDX ID of the resource and security scope of the resource can be obtained from the <b> IUDX catalogue server </b>. <br/> You can use this API to make a `spatial` or `attribute` or `complex : spatial+attribute` query.
- name: Temporal Entities
  x-displayName: "Temporal and Complex Search"
  description: |
        A Temporal Search is used by IUDX Data *Consumers* for querying a resource using a <b>valid IUDX</b> `id`, `temporal`, `spatial` and `attribute` parameters. <br/> If the resource is a <b> protected resource </b> a <b> valid IUDX Auth token </b> is <b> mandatory </b>  in the header parameter of the request.  <br/> Information about the IUDX ID of the resource and security scope of the resource can be obtained from the <b> IUDX catalogue server </b>. <br/>In order to use this API, a `temporal` parameter is <b>mandatory</b>. <br/> You can use this API to make a `temporal` or `complex : temporal+spatial` or `complex : temporal+attribute` or `complex : temporal+spatial+attribute` query. <br/> If you are looking for an `attribute` only query refer the <b>Spatial Search</b> `/entities` endpoint.

- name: Entities Post Query
  x-displayName: "Complex Search (Post Query)"
  description: |
        A Complex Search (Post Query) is an HTTP POST API and is used by IUDX Data *Consumers*. <br/>This API is used for querying a resource using a <b>valid IUDX</b> `id`, `temporal`, `spatial` and `attribute` parameters. <br/> If the resource is a <b> protected resource </b> a <b> valid IUDX Auth token </b> is <b> mandatory </b>  in the header parameter of the request.  <br/> Information about the IUDX ID of the resource and security scope of the resource can be obtained from the <b> IUDX catalogue server </b>. <br/> You can use this API to make a `temporal` or `spatial` or `attribute` or `complex : temporal+spatial` or `complex : temporal+attribute` or `complex : spatial+attribute` or `complex : temporal+spatial+attribute` query.

- name: Data Adaptor
  x-displayName: "Data Adaptor"
  description: |
    Register Data Adaptor using HTTPs APIs. Once registered, the adaptors can publish data as per the IUDX data descriptor using AMQP streaming protocol over TLS.
    Stream data of an adaptor using AMQP streaming protocol.
    These apis are intended to be used by IUDX Data *Providers*.

- name: Data Subscriber
  x-displayName: "Data Subscriber"
  description: |
    Register Subscriber a.k.a [Streaming Consumer] using HTTPs APIs to subscribe for data as per the IUDX data descriptor  using AMQP streaming protocol over TLS.
    These apis are intended to be used by IUDX Data *Subscribers* a.k.a [Streaming Consumer].

paths:
      
  /ngsi-ld/v1/entities/{id}:
    get:
      tags:
      - Latest Entity
      summary: Latest Data 
      operationId: latest-entities
      parameters:
      - name: token
        in: header
        description: A <b> valid IUDX Auth token </b> to process the request for a <b> protected entity </b> . <br/> This field is <b> mandatory </b> for accessing a <b> protected resource </b> .  <br/> If not provided with a valid token, user will be responded with <b> 401 Unauthorized </b> .
        schema:
          type: string
          maxLength: 512
          pattern: '^[a-zA-Z0-9\/\@\.]*$'
      
      - name: id
        in: path
        description: 'A <b> valid IUDX ID </b> of the resource.  <br/> If the resource is a <b> protected resource </b> a <b> valid IUDX Auth token </b> is <b> mandatory </b>  in the header parameter of the request.  <br/> Information about the IUDX ID of the resource and security scope of the resource can be obtained from the <b> IUDX catalogue server </b> .'
        required: true
        schema:
          type: string
          maxLength: 512

      responses:
        200:
          description: 'Successful query'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/entityresponse'
        204:
          description: 'Empty Response'

        400:
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/standardBadRequestErrorResponse"
          description: 'Bad query'

        401:
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/standardInvalidTokenErrorResponse"
          description: 'Unauthorized'

        404:
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/standardResourceNotFoundErrorResponse"
          description: 'Resource not found'

      x-codeSamples:
        - lang: 'get latest data'
          source: |
            https://rs.iudx.org.in/ngsi-ld/v1/entities/suratmunicipal.org/6db486cb4f720e8585ba1f45a931c63c25dbbbda/rs.iudx.org.in/surat-itms-realtime-info/surat-itms-live-eta

      description: |
        The <b> Latest Data API </b> is used to get the latest (last published) data of a resource. <br /> It uses the <b> IUDX ID </b> a.k.a `id` to query the resource server. <br />  To get data for a <b> protected resource</b>  a <b> valid IUDX Auth token</b>  is mandatory.  <br/> The `/entities` end point follwed by `id` as a <b>path parameter</b> is used to get the latest data.

      deprecated: false

  /ngsi-ld/v1/entities:
    get:
      tags:
      - Spatial Entities
      operationId: Spatial Search
      parameters:
      - name: token
        in: header
        description: A <b> valid IUDX Auth token </b> to process the request for a <b> protected entity </b> . <br/> This field is <b> mandatory </b> for accessing a <b> protected resource </b> .  <br/> If not provided with a valid token, user will be responded with <b> 401 Unauthorized </b> .
        schema:
          type: string
          maxLength: 512
          pattern: '^[a-zA-Z0-9\/\@\.]*$'
      
      - name: id
        in: query
        description: 'A <b> valid IUDX ID </b> of the resource.  <br/> If the resource is a <b> protected resource </b> a <b> valid IUDX Auth token </b> is <b> mandatory </b>  in the header parameter of the request.  <br/> Information about the IUDX ID of the resource and security scope of the resource can be obtained from the <b> IUDX catalogue server </b> .'
        required: true
        schema:
          type: string
          maxLength: 512

      - name: geoproperty
        in: query
        description: 'Name of the <b> geospatial </b> property in the <b> IUDX data descriptor </b>. <br /> The current version of the API <b> mandates </b> it to be equal to `location`'
        schema:
          type: string
          enum: [location]
      - name: georel
        in: query
        description: 'The relation type of <b>geoquery</b> to be performed. <br/> This <b>should</b> be one from the available options in the Enum list. <br/> The relation <b> near </b> should be always accomodated with a <b> maxdistance </b> property. <br/> Apart from <b> maxdistance</b> , all other fields in the Enum list are <b> case sensitive </b> fields. <br/> The relation <b> near;maxdistance </b> is applicable only for a <b> point </b>.  <br/> The relation <b> within </b> and  <b> intersects </b> are applicable only for <b> bbox, polygon and linestring</b>.'
        schema:
          type: string
          enum: [near;maxdistance=<distance_in_meters>, within, intersects]

      - name: geometry
        in: query
        description: 'The geometry type of <b>geoquery</b> to be performed. <br/> This <b>should</b> be one from the available options in the Enum list. <br/>The list is <b>case sensitive</b> '
        schema:
          type: string
          enum: [Point (or) point, Polygon (or) polygon, LineString (or) linestring, bbox]

      - name: coordinates
        in: query
        description: 'The coordinates for a specific geometry query type. <br/> This parameter accepts both <b> one dimentional array and multi dimentional arrays </b> based on the <b> geometry</b> type. <br/> For e.g, [longitude-1,latitude-1] should be used for geometry <b>point</b>.  <br/>[[[longitude-1,latitude-1], [longitude-2,latitude-2],...., [longitude-n,latitude-n]]] should be used for geometry <b>polygon</b>. <br/> [[longitude-1,latitude-1], [longitude-2,latitude-2],...., [longitude-n,latitude-n]] should be used for geometry <b>bbox and linestring </b>. <br/> Maximum of 10 latitude, longitude pairs can be used for geometry <b>polygon, bbox and linestring </b>. <br/> Note: The data-type of this field is a string, therefore the coordinates are a string encoded multidimensional array. <br/> Maximum precision allowed is upto 6 decimal places.'
        schema:
          type: array
          minItems: 1
          maxItems: 10
          items:
            type: number
          format: double
      - name: maxDistance
        description: 'The maximum distance to be queried from center point in meters. <br/> This is applicable and is <b>mandatory</b> for <b>point</b> geometry.<br/> It should be used along with relation <b>near</b>.'
        schema:
          type: number
          minimum: 0
          maximum: 10000
        in: query
        required: false

      - name: q
        in: query
        description: 'The attribute query is used for querying <b> allowed quantitative</b> properties. <br/> Used to query on a value of a resource attribute using `<`,`>`,`<=`,`>=`,`!=`, `==` operators. <br/> For e.g, attribute > value, attribute < value, attribute >= value, attribute <= value, attribute != value and attribute == value. <br/> Allowed values for all operators is double. <br/> For the operator `==` if the query is on `id` then the only value allowed is an `IUDX ID` of a resource.'
        schema:
          type: string
          maxLength: 512

      - name: attrs
        in: query
        description: 'The attrs parameter is used as an <b>application filter</b>. <br/> This is an optional parameter. It can be used to provide the list of attributes which the consumer expects to be responded by the server. <br/> The consumer is expected to provide <b>only</b> the attributes available in the <b>data descriptor</b> of the item in the IUDX Catalogue. <br/> Minimum of 1 and a Maximum of 5 attributes can be provided in a comma separated fashion.'
        schema:
          type: string
          maxLength: 512

      - name: options
        in: query
        description: 'The <b>options</b> parameter is used for obtaining the <b>number of hits</b> for a query. <br/> It should be used along with the <b> valid </b> `spatial`, `attribute` or `complex` queries. <br/> It <b>cannot</b> be used along with a <b>attrs</b> filter. The value should be equal to `count` and it is <b>case sensitive</b>'
        schema:
          type: string
          enum: [count]


      responses:
        200:
          description: 'Successful query'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/entityresponse'
        204:
          description: 'Empty Response'

        400:
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/standardBadRequestErrorResponse"
          description: 'Bad query'

        401:
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/standardInvalidTokenErrorResponse"
          description: 'Unauthorized'

        404:
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/standardResourceNotFoundErrorResponse"
          description: 'Resource not found'

      x-codeSamples:
        - lang: 'search by attribute'
          source: |
            https://rs.iudx.org.in/ngsi-ld/v1/entities?id=suratmunicipal.org/6db486cb4f720e8585ba1f45a931c63c25dbbbda/rs.iudx.org.in/surat-itms-realtime-info/surat-itms-live-eta&q=speed%3E30.0
        - lang: 'search by circle'
          source: |
            https://rs.iudx.org.in/ngsi-ld/v1/entities?id=suratmunicipal.org/6db486cb4f720e8585ba1f45a931c63c25dbbbda/rs.iudx.org.in/surat-itms-realtime-info/surat-itms-live-eta&geoproperty=location&georel=near;maxDistance=1000&geometry=Point&coordinates=[21.178,72.834]
        - lang: 'search by polygon'
          source: |
            https://rs.iudx.org.in/ngsi-ld/v1/entities?id=suratmunicipal.org/6db486cb4f720e8585ba1f45a931c63c25dbbbda/rs.iudx.org.in/surat-itms-realtime-info/surat-itms-live-eta&geoproperty=location&georel=within&geometry=Polygon&coordinates=[[[82.9738998413086,25.330372970610558],[82.97201156616211,25.28428253090838],[83.02436828613281,25.285524253944203],[83.02007675170898,25.32866622999033],[82.9738998413086,25.330372970610558]]]
        - lang: 'search by bbox'
          source: |
            https://rs.iudx.org.in/ngsi-ld/v1/entities?id=suratmunicipal.org/6db486cb4f720e8585ba1f45a931c63c25dbbbda/rs.iudx.org.in/surat-itms-realtime-info/surat-itms-live-eta&geoproperty=location&georel=within&geometry=bbox&coordinates=[[82.97698974609375,25.321994194865383],[83.00411224365234,25.291267057619464]]
        - lang: 'search by attribute and filter'
          source: |
            https://rs.iudx.org.in/ngsi-ld/v1/entities?id=suratmunicipal.org/6db486cb4f720e8585ba1f45a931c63c25dbbbda/rs.iudx.org.in/surat-itms-realtime-info/surat-itms-live-eta&q=speed%3E=50&attrs=speed,id
        - lang: 'count by circle'
          source: |
            https://rs.iudx.org.in/ngsi-ld/v1/entities?id=suratmunicipal.org/6db486cb4f720e8585ba1f45a931c63c25dbbbda/rs.iudx.org.in/surat-itms-realtime-info/surat-itms-live-eta&geoproperty=location&georel=near;maxDistance=100&geometry=Point&coordinates=[25.319768,82.987988]&options=count
          
      deprecated: false
      description: |
        The `/entities` end point allows a consumer to query on data published based on a <b>spatial</b> and <b>attribute</b> properties. The <b>spatial</b> queries should be submitted as a geo json as described in the API. All the queries requires a <b> valid IUDX </b> `id` of the resource. These apis are intended to be used by IUDX Data *Consumers*.

          - <b>Allowed Search Operations</b>: 
              - <b> Spatial (Geo) Search : </b> which queries the geo property of the resource.
              - <b> Attribute Search : </b> which queries the valid attributes as per the data descriptor.
              - <b> Complex Search : </b> which queries using the combination of the above two.

      
        #### Spatial (Geo) Search
        Geo search accepts geojson based queries. The params and their accepted values are briefed below -
          - <b>geoproperty</b>: 
              - Specifies the name of the <b> geospatial </b> property in the <b> IUDX data descriptor </b>.
              - The current version of the API <b> mandates </b> it to be equal to `location`
          - <b>georel</b>:   
              - Specifies the spatial relationship to be queried.
              - The relation type of <b>geoquery</b> can be <b>one of</b> `near;maxdistance=<distance_in_meters>`, `within`, `intersects`.
              - The relation <b> near </b> should be always accomodated with a <b> maxdistance </b> property.
              - Apart from <b> maxdistance</b> , all other fields in the Enum list are <b> case sensitive </b> fields.
              - The relation <b> near;maxdistance </b> is applicable only for a <b> point </b>.
              - The relation <b> within </b> and  <b> intersects </b> are applicable only for <b> bbox, polygon and linestring</b>.

          - <b>geometry</b>:  
              - Specifies the GeoJson geometries. 
              - Should be One of `Point`(equivalent for a circle), `Polygon`, `LineString`, `bbox`.
              - <b>Point</b>: Point and radius query
                  - coordinates: Specifies the  center point of the circle, for e.g, `[73,13]`. <br/>Note, format is [longitude, latitude]
                  - maxDistance: Specifies the Radius from the center point in meters, for e.g `100`. `maxValue` : 10000
                  - georel: In this version of IUDX API, the allowed relationship search for a circle is `near` with a `maxdistance` in meters specified. This will be equivalent to a `within` query. Format is `near;maxdistance=<distance_in_meters>` 
              - <b>Polygon</b>: Polygon/Multi-Polygon query
                  - coordinates: Specifies the  coordinates of the polygon, for e.g, `[[[73,13],[73,12],[73,13]]]`.  <br/>Note, format is [longitude, latitude] and the first coordinate must be same as last. 
                  - `minNumberOfCoOrdinates` : 4 and `maxnNumberOfCoOrdinates` : 10
                  - georel: `within`, `intersects`
              - <b>LineString</b>: Multi line string
                  - coordinates: Specifies the coordinates of the multi-line, for e.g, `[[73,13],[74,15],[75,16]]`. <br/>Note, format is [longitude, latitude]
                  - `minNumberOfCoOrdinates` : 2 and `maxnNumberOfCoOrdinates` : 10
                  - georel:  `within`, `intersects`
              - <b>bbox</b>: Bounding box
                  - coordinates: `[[top-left],[bottom-right]]`. e.g, `[[73,13],[74,12]]`. <br/>Note, format is [longitude, latitude].
                  - georel:  `within`, `intersects`

        #### Attribute search
        The attribute query is used for querying <b> allowed quantitative</b> properties. 
          - Used to query on a value of a resource attribute using `<`,`>`,`<=`,`>=`,`!=`,`==` operators. 
          - For e.g, attribute > value, attribute < value, attribute >= value, attribute <= value and attribute == value. 
          - Allowed values for all operators is double. 
          - For the operator `==` if the query is on `id` then the only value allowed is an `IUDX ID` of a resource. 
          - e.g, `q=attribute-name>attribute-value`

        #### Complex search
        A combination of the above is allowed to make searches more  complex.

        #### Filters
          - A subset of properties of returned documents can be filtered out. This is an option parameter. <br/>For e.g, `attrs=[id]` returns documents with only the `id` property retained in them. 
          - `minNumberOfAttributes` : 1 and `maxNumberOfAttributes` : 5 

        #### Options
          - The <b>options</b> parameter is used for obtaining the <b>number of hits</b> for a query. 
          - It should be used along with the <b> valid </b> `spatial`, `attribute` or `complex` queries. 
          - It <b>cannot</b> be used along with a <b>attrs</b> filter. 
          - The value should be equal to `count` and it is <b>case sensitive</b>


  /ngsi-ld/v1/temporal/entities:
    get:
      tags:
      - Temporal Entities
      summary: Temporal Search 
      operationId: temporal-entities
      parameters:
      - name: token
        in: header
        description: A <b> valid IUDX Auth token </b> to process the request for a <b> protected entity </b> . <br/> This field is <b> mandatory </b> for accessing a <b> protected resource </b> .  <br/> If not provided with a valid token, user will be responded with <b> 401 Unauthorized </b> .
        schema:
          type: string
          maxLength: 512
          pattern: '^[a-zA-Z0-9\/\@\.]*$'
      
      - name: id
        in: query
        description: 'A <b> valid IUDX ID </b> of the resource.  <br/> If the resource is a <b> protected resource </b> a <b> valid IUDX Auth token </b> is <b> mandatory </b>  in the header parameter of the request.  <br/> Information about the IUDX ID of the resource and security scope of the resource can be obtained from the <b> IUDX catalogue server </b> .'
        required: true
        schema:
          type: string
          maxLength: 512

      - name: timerel
        in: query
        description: 'The temporal relation type of <b>timerel</b> to be performed. <br/> This <b>should</b> be one from the available options in the Enum list. <br/> If the relation is <b> during </b> it should be always accomodated with a <b> time </b> and <b> endtime </b> property.  <br/> If the relation is <b> before </b> or <b> after </b>it should be always accomodated <b> only</b> with a <b> time </b> property.'
        required: true
        schema:
          type: string
          enum: [during, before, after]          
      - name: time
        in: query
        description: 'This parameter specifies the <b>start time</b> for the temporal-query in `ISO8601` format. <br/> IUDX currently accepts `IST` and `UTC` time zones for the temporal query.'
        required: true
        schema:
          type: string
      - name: endtime
        in: query
        description: 'This parameter specifies the <b>end time</b> for the temporal-query in `ISO8601` format. <br/> IUDX currently accepts `IST` and `UTC` time zones for the temporal query. <br/>If <b>timerel</b> is `during` time and endtime are mandatory'
        schema:
          type: string

      - name: geoproperty
        in: query
        description: 'Name of the <b> geospatial </b> property in the <b> IUDX data descriptor </b>. <br /> The current version of the API <b> mandates </b> it to be equal to `location`'
        schema:
          type: string
          enum: [location]
      - name: georel
        in: query
        description: 'The relation type of <b>geoquery</b> to be performed. <br/> This <b>should</b> be one from the available options in the Enum list. <br/> The relation <b> near </b> should be always accomodated with a <b> maxdistance </b> property. <br/> Apart from <b> maxdistance</b> , all other fields in the Enum list are <b> case sensitive </b> fields. <br/> The relation <b> near;maxdistance </b> is applicable only for a <b> point </b>.  <br/> The relation <b> within </b> and  <b> intersects </b> are applicable only for <b> bbox, polygon and linestring</b>.'
        schema:
          type: string
          enum: [near;maxdistance=<distance_in_meters>, within, intersects]

      - name: geometry
        in: query
        description: 'The geometry type of <b>geoquery</b> to be performed. <br/> This <b>should</b> be one from the available options in the Enum list. <br/>The list is <b>case sensitive</b> '
        schema:
          type: string
          enum: [Point (or) point, Polygon (or) polygon, LineString (or) linestring, bbox]

      - name: coordinates
        in: query
        description: 'The coordinates for a specific geometry query type. <br/> This parameter accepts both <b> one dimentional array and multi dimentional arrays </b> based on the <b> geometry</b> type. <br/> For e.g, [longitude-1,latitude-1] should be used for geometry <b>point</b>.  <br/>[[[longitude-1,latitude-1], [longitude-2,latitude-2],...., [longitude-n,latitude-n]]] should be used for geometry <b>polygon</b>. <br/> [[longitude-1,latitude-1], [longitude-2,latitude-2],...., [longitude-n,latitude-n]] should be used for geometry <b>bbox and linestring </b>. <br/> Maximum of 10 latitude, longitude pairs can be used for geometry <b>polygon, bbox and linestring </b>. <br/> Note: The data-type of this field is a string, therefore the coordinates are a string encoded multidimensional array.<br/> Maximum precision allowed is upto 6 decimal places.'
        schema:
          type: array
          minItems: 1
          maxItems: 10
          items:
            type: number
          format: double
      - name: maxDistance
        description: 'The maximum distance to be queried from center point in meters. <br/> This is applicable and is <b>mandatory</b> for <b>point</b> geometry.<br/> It should be used along with relation <b>near</b>.'
        schema:
          type: number
          minimum: 0
          maximum: 10000
        in: query
        required: false

      - name: q
        in: query
        description: 'The attribute query is used for querying <b> allowed quantitative</b> properties. <br/> Used to query on a value of a resource attribute using `<`,`>`,`<=`,`>=`,`!=`, `==` operators. <br/> For e.g, attribute > value, attribute < value, attribute >= value, attribute <= value, attribute != value and attribute == value. <br/> Allowed values for all operators is double. <br/> For the operator `==` if the query is on `id` then the only value allowed is an `IUDX ID` of a resource.'
        schema:
          type: string
          maxLength: 512

      - name: attrs
        in: query
        description: 'The attrs parameter is used as an <b>application filter</b>. <br/> This is an optional parameter. It can be used to provide the list of attributes which the consumer expects to be responded by the server. <br/> The consumer is expected to provide <b>only</b> the attributes available in the <b>data descriptor</b> of the item in the IUDX Catalogue. <br/> Minimum of 1 and a Maximum of 5 attributes can be provided in a comma separated fashion.'
        schema:
          type: string
          maxLength: 512

      - name: options
        in: query
        description: 'The <b>options</b> parameter is used for obtaining the <b>number of hits</b> for a spatial query. <br/> It should be used along with the <b> valid temporal query</b> or a <b> valid complex query</b>. <br/> It <b>cannot</b> be used along with a <b>attrs</b> filter. The value should be equal to `count` and it is <b>case sensitive</b>'
        schema:
          type: string
          enum: [count]

      responses:
        200:
          description: 'Successful query'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/entityresponse'
        204:
          description: 'Empty Response'

        400:
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/standardBadRequestErrorResponse"
          description: 'Bad query'

        401:
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/standardInvalidTokenErrorResponse"
          description: 'Unauthorized'

        404:
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/standardResourceNotFoundErrorResponse"
          description: 'Resource not found'

      x-codeSamples:
        - lang: 'search by during'
          source: |
            https://rs.iudx.org.in/ngsi-ld/v1/temporal/entities?id=suratmunicipal.org/6db486cb4f720e8585ba1f45a931c63c25dbbbda/rs.iudx.org.in/surat-itms-realtime-info/surat-itms-live-eta&timerel=during&time=2020-06-01T14:20:00Z&endtime=2020-06-06T14:20:00Z
        - lang: 'search by before'
          source: |
            https://rs.iudx.org.in/ngsi-ld/v1/temporal/entities?id=suratmunicipal.org/6db486cb4f720e8585ba1f45a931c63c25dbbbda/rs.iudx.org.in/surat-itms-realtime-info/surat-itms-live-eta&timerel=before&time=2020-06-01T14:20:01Z
        - lang: 'search by after'
          source: |
            https://rs.iudx.org.in/ngsi-ld/v1/temporal/entities?id=suratmunicipal.org/6db486cb4f720e8585ba1f45a931c63c25dbbbda/rs.iudx.org.in/surat-itms-realtime-info/surat-itms-live-eta&timerel=after&time=2020-06-01T14:20:01Z
        - lang: 'search by after and filter'
          source: |
            https://rs.iudx.org.in/ngsi-ld/v1/temporal/entities?id=suratmunicipal.org/6db486cb4f720e8585ba1f45a931c63c25dbbbda/rs.iudx.org.in/surat-itms-realtime-info/surat-itms-live-eta&timerel=after&time=2020-06-01T14:20:01Z&attrs=speed,id
        - lang: 'count by after'
          source: |
            https://rs.iudx.org.in/ngsi-ld/v1/temporal/entities?id=suratmunicipal.org/6db486cb4f720e8585ba1f45a931c63c25dbbbda/rs.iudx.org.in/surat-itms-realtime-info/surat-itms-live-eta&timerel=after&time=2020-06-01T14:20:01Z&options=count
        - lang: 'complex search'
          source: |
            https://rs.iudx.org.in/ngsi-ld/v1/temporal/entities?id=suratmunicipal.org/6db486cb4f720e8585ba1f45a931c63c25dbbbda/rs.iudx.org.in/surat-itms-realtime-info/surat-itms-live-eta&geoproperty=location&georel=near;maxDistance=100&geometry=Point&coordinates=[25.319768,82.987988]&timerel=before&time=2020-06-01T14:20:01Z&attrs=speed,id
        - lang: 'complex count'
          source: |
            https://rs.iudx.org.in/ngsi-ld/v1/temporal/entities?id=suratmunicipal.org/6db486cb4f720e8585ba1f45a931c63c25dbbbda/rs.iudx.org.in/surat-itms-realtime-info/surat-itms-live-eta&geoproperty=location&georel=near;maxDistance=100&geometry=Point&coordinates=[25.319768,82.987988]&timerel=before&time=2020-06-01T14:20:01Z&options=count'


      deprecated: false
      description: |
        The `/temporal/entities` end point allows a consumer to query on data published based on a <b>spatial</b>, <b>temporal</b> and <b>attribute</b> properties. The <b>spatial</b> queries should be submitted as a geo json as described in the API. All the queries requires a <b> valid IUDX</b> `id`  of the resource and a `temporal` parameter. These apis are intended to be used by IUDX Data *Consumers*.

          - <b>Allowed Search Operations</b>: 
              - <b> Temporal Search : </b> which queries the temporal property of the resource.
              - <b> Spatial (Geo) Search : </b> which queries the geo property of the resource.
              - <b> Attribute Search : </b> which queries the valid attributes as per the data descriptor.
              - <b> Complex Search : </b> which queries using the combination of the above three.

        #### Temporal search
        Temporal search accepts time property based queries which are specified in ISO 8601 format. The params and their accepted values are -
          - <b>timerel</b>: The time relation of the query. Should be either `during`, `before` or `after`.
          - <b>time</b>: Start time for the temporal query in `ISO 8601` format. 
          - <b>endtime</b>: End time for the temporal query in `ISO 8601` format. Applicable only for `timerel = during`. 
          - Note, The time difference between `time` and `endtime` should be less than `10 days`. For `before` and `after` queries, `10 days` of data `before` or `after` the specified time will be provided.

      
        #### Spatial (Geo) Search
        Geo search accepts geojson based queries. The params and their accepted values are briefed below -
          - <b>geoproperty</b>: 
              - Specifies the name of the <b> geospatial </b> property in the <b> IUDX data descriptor </b>.
              - The current version of the API <b> mandates </b> it to be equal to `location`
          - <b>georel</b>:   
              - Specifies the spatial relationship to be queried.
              - The relation type of <b>geoquery</b> can be <b>one of</b> `near;maxdistance=<distance_in_meters>`, `within`, `intersects`.
              - The relation <b> near </b> should be always accomodated with a <b> maxdistance </b> property.
              - Apart from <b> maxdistance</b> , all other fields in the Enum list are <b> case sensitive </b> fields.
              - The relation <b> near;maxdistance </b> is applicable only for a <b> point </b>.
              - The relation <b> within </b> and  <b> intersects </b> are applicable only for <b> bbox, polygon and linestring</b>.

          - <b>geometry</b>:  
              - Specifies the GeoJson geometries. 
              - Should be One of `Point`(equivalent for a circle), `Polygon`, `LineString`, `bbox`.
              - <b>Point</b>: Point and radius query
                  - coordinates: Specifies the  center point of the circle, for e.g, `[73,13]`. <br/>Note, format is [longitude, latitude]
                  - maxDistance: Specifies the Radius from the center point in meters, for e.g `100`. `maxValue` : 10000
                  - georel: In this version of IUDX API, the allowed relationship search for a circle is `near` with a `maxdistance` in meters specified. This will be equivalent to a `within` query. Format is `near;maxdistance=<distance_in_meters>` 
              - <b>Polygon</b>: Polygon/Multi-Polygon query
                  - coordinates: Specifies the  coordinates of the polygon, for e.g, `[[[73,13],[73,12],[73,13]]]`.  <br/>Note, format is [longitude, latitude] and the first coordinate must be same as last. 
                  - `minNumberOfCoOrdinates` : 4 and `maxnNumberOfCoOrdinates` : 10
                  - georel: `within`, `intersects`
              - <b>LineString</b>: Multi line string
                  - coordinates: Specifies the coordinates of the multi-line, for e.g, `[[73,13],[74,15],[75,16]]`. <br/>Note, format is [longitude, latitude]
                  - `minNumberOfCoOrdinates` : 2 and `maxnNumberOfCoOrdinates` : 10
                  - georel:  `within`, `intersects`
              - <b>bbox</b>: Bounding box
                  - coordinates: `[[top-left],[bottom-right]]`. e.g, `[[73,13],[74,12]]`. <br/>Note, format is [longitude, latitude].
                  - georel:  `within`, `intersects`

        #### Attribute search
        The attribute query is used for querying <b> allowed quantitative</b> properties. 
          - Used to query on a value of a resource attribute using `<`,`>`,`<=`,`>=`,`!=`, `==` operators. 
          - For e.g, attribute > value, attribute < value, attribute >= value, attribute <= value and attribute == value. 
          - Allowed values for all operators is double. 
          - For the operator `==` if the query is on `id` then the only value allowed is an `IUDX ID` of a resource. 
          - e.g, `q=attribute-name>attribute-value`

        #### Complex search
        A combination of the above is allowed to make searches more  complex.

        #### Filters
          - A subset of properties of returned documents can be filtered out. This is an option parameter. <br/>For e.g, `attrs=[id]` returns documents with only the `id` property retained in them. 
          - `minNumberOfAttributes` : 1 and `maxNumberOfAttributes` : 5 

        #### Options
          - The <b>options</b> parameter is used for obtaining the <b>number of hits</b> for a query. 
          - It should be used along with the <b> valid </b> `temporal`, or `complex` queries. 
          - It <b>cannot</b> be used along with a <b>attrs</b> filter. 
          - The value should be equal to `count` and it is <b>case sensitive</b>
     
  /ngsi-ld/v1/entityOperations/query:
    post:
      tags:
      - Entities Post Query
      summary: Search (Post Query) 
      operationId: complex-query
      parameters: 
      - name: token
        in: header
        description: A <b> valid IUDX Auth token </b> to process the request for a <b> protected entity </b> . <br/> This field is <b> mandatory </b> for accessing a <b> protected resource </b> .  <br/> If not provided with a valid token, user will be responded with <b> 401 Unauthorized </b> .
        schema:
          type: string
          maxLength: 512
          pattern: '^[a-zA-Z0-9\/\@\.]*$'       
      
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/complex-geo-circle-time-filterrequest'
            example:
              type: Query
              entities:
              - id: suratmunicipal.org/6db486cb4f720e8585ba1f45a931c63c25dbbbda/rs.iudx.org.in/surat-itms-realtime-info/surat-itms-live-eta
              geoQ:
                geometry: Point
                coordinates:
                - 25.319768
                - 82.987988000000001
                georel: near;maxDistance=1000
                geoproperty: geoJsonLocation
              temporalQ:
                timerel: "during"
                time: "2020-06-01T14:20:00Z"
                endtime: "2020-06-03T15:00:00Z"
                timeProperty: "observationDateTime"
              q: "speed>=50"
              attrs: "id,location"

        required: true

      responses:
        200:
          description: 'Successful query'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/entityresponse'
        204:
          description: 'Empty Response'

        400:
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/standardBadRequestErrorResponse"
          description: 'Bad query'

        401:
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/standardInvalidTokenErrorResponse"
          description: 'Unauthorized'

        404:
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/standardResourceNotFoundErrorResponse"
          description: 'Resource not found'

      description: |
        The `/entityOperations/query` end point allows a consumer to query on data published based on a <b>spatial</b>, <b>temporal</b> and <b>attribute</b> properties. The <b>spatial</b> queries should be submitted as a geo json as described in the API. All the queries requires a <b> valid IUDX</b> `id` of the resource within the `entities` json object as per the schema. These apis are intended to be used by IUDX Data *Consumers*.

          - <b>Allowed Search Operations</b>: 
              - <b> Temporal Search : </b> which queries the temporal property of the resource.
              - <b> Spatial (Geo) Search : </b> which queries the geo property of the resource.
              - <b> Attribute Search : </b> which queries the valid attributes as per the data descriptor.
              - <b> Complex Search : </b> which queries using the combination of the above three.

        #### Temporal search
        Temporal search accepts time property based queries which are specified in ISO 8601 format. The params and their accepted values are -
          - <b>timerel</b>: The time relation of the query. Should be either `during`, `before` or `after`.
          - <b>time</b>: Start time for the temporal query in `ISO 8601` format. 
          - <b>endtime</b>: End time for the temporal query in `ISO 8601` format. Applicable only for `timerel = during`. 
          - Note, The time difference between `time` and `endtime` should be less than `10 days`. For `before` and `after` queries, `10 days` of data `before` or `after` the specified time will be provided.

      
        #### Spatial (Geo) Search
        Geo search accepts geojson based queries. The params and their accepted values are briefed below -
          - <b>geoproperty</b>: 
              - Specifies the name of the <b> geospatial </b> property in the <b> IUDX data descriptor </b>.
              - The current version of the API <b> mandates </b> it to be equal to `location`
          - <b>georel</b>:   
              - Specifies the spatial relationship to be queried.
              - The relation type of <b>geoquery</b> can be <b>one of</b> `near;maxdistance=<distance_in_meters>`, `within`, `intersects`.
              - The relation <b> near </b> should be always accomodated with a <b> maxdistance </b> property.
              - Apart from <b> maxdistance</b> , all other fields in the Enum list are <b> case sensitive </b> fields.
              - The relation <b> near;maxdistance </b> is applicable only for a <b> point </b>.
              - The relation <b> within </b> and  <b> intersects </b> are applicable only for <b> bbox, polygon and linestring</b>.

          - <b>geometry</b>:  
              - Specifies the GeoJson geometries. 
              - Should be One of `Point`(equivalent for a circle), `Polygon`, `LineString`, `bbox`.
              - <b>Point</b>: Point and radius query
                  - coordinates: Specifies the  center point of the circle, for e.g, `[73,13]`. <br/>Note, format is [longitude, latitude]
                  - maxDistance: Specifies the Radius from the center point in meters, for e.g `100`. `maxValue` : 10000
                  - georel: In this version of IUDX API, the allowed relationship search for a circle is `near` with a `maxdistance` in meters specified. This will be equivalent to a `within` query. Format is `near;maxdistance=<distance_in_meters>` 
              - <b>Polygon</b>: Polygon/Multi-Polygon query
                  - coordinates: Specifies the  coordinates of the polygon, for e.g, `[[[73,13],[73,12],[73,13]]]`.  <br/>Note, format is [longitude, latitude] and the first coordinate must be same as last. 
                  - `minNumberOfCoOrdinates` : 4 and `maxnNumberOfCoOrdinates` : 10
                  - georel: `within`, `intersects`
              - <b>LineString</b>: Multi line string
                  - coordinates: Specifies the coordinates of the multi-line, for e.g, `[[73,13],[74,15],[75,16]]`. <br/>Note, format is [longitude, latitude]
                  - `minNumberOfCoOrdinates` : 2 and `maxnNumberOfCoOrdinates` : 10
                  - georel:  `within`, `intersects`
              - <b>bbox</b>: Bounding box
                  - coordinates: `[[top-left],[bottom-right]]`. e.g, `[[73,13],[74,12]]`. <br/>Note, format is [longitude, latitude].
                  - georel:  `within`, `intersects`

        #### Attribute search
        The attribute query is used for querying <b> allowed quantitative</b> properties. 
          - Used to query on a value of a resource attribute using `<`,`>`,`<=`,`>=`,`!=`,`==` operators. 
          - For e.g, attribute > value, attribute < value, attribute >= value, attribute <= value and attribute == value. 
          - Allowed values for all operators is double. 
          - For the operator `==` if the query is on `id` then the only value allowed is an `IUDX ID` of a resource. 
          - e.g, `q=attribute-name>attribute-value`

        #### Complex search
        A combination of the above is allowed to make searches more  complex.

        #### Filters
          - A subset of properties of returned documents can be filtered out. This is an option parameter. <br/>For e.g, `attrs=[id]` returns documents with only the `id` property retained in them. 
          - `minNumberOfAttributes` : 1 and `maxNumberOfAttributes` : 5 

        #### Options
          - The <b>options</b> parameter is used for obtaining the <b>number of hits</b> for a query. 
          - It should be used along with the <b> valid </b> `temporal`, or `complex` queries. 
          - It <b>cannot</b> be used along with a <b>attrs</b> filter. 
          - The value should be equal to `count` and it is <b>case sensitive</b>

      deprecated: false

  /iudx/v1/adapter/register:
    post:
      tags:
      - Data Adaptor
      summary: Register adapter
      operationId: registeradapter
      parameters:
      - name: token
        in: header
        description: 'IUDX auth token for accessing API and the resource.'
        required: true
        style: simple
        schema:
          type: string
          maxLength: 512
          pattern: '^[a-zA-Z0-9\/\@\.]*$'
          
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/registeradapterrequest'
        required: true
      responses:
        201:
          description: 'Successful query'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/registeradapter'

        400:
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/adapterBadRequestErrorResponse"
          description: 'Bad query'

        401:
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/standardInvalidTokenErrorResponse"
          description: 'Unauthorized'

      description: |
        Register Adapter API allows a provider to register an adapter with IUDX Resource Server. Based on the input provided, the API validates the access control of the user with IUDX Auth server to allow or deny access to the API. 
        
        #### Register Adapter
        To register an adapter, a user must request for a consent from the provider, obtain a token from IUDX Auth server and then access the API with the following values:
          - `resourceGroup`: Name of the resource group as registered in IUDX catalogue.
          - `resourceServer`: Domain name of the resource server in which the adapter needs to register. 
      
      deprecated: false

  /iudx/v1/adapter/{id}:
    get:
      tags:
      - Data Adaptor
      summary: Retrieve adapter details
      operationId: getadaptordetails
      parameters:
      - name: token
        in: header
        description: 'IUDX auth token for accessing API and the resource.'
        required: true
        style: simple
        schema:
          type: string
          maxLength: 512
          pattern: '^[a-zA-Z0-9\/\@\.]*$'
          
      - name: id
        in: path
        description: 'id of the adapter obtained from Register adapter.'
        required: true
        style: simple
        schema:
          type: string
          maxLength: 512          
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/retrieveadapter'
          description: 'Successful query'

        400:
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/adapterBadRequestErrorResponse"
          description: 'Bad query'

        401:
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/standardInvalidTokenErrorResponse"
          description: 'Unauthorized'

        404:
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/standardResourceNotFoundErrorResponse"
          description: 'Resource not found'

      x-codeSamples:
        - lang: 'by id'
          source: |
            https://rs.iudx.io/iudx/v1/adapter/iudx.io/aa9d66a000d94a78895de8d4c0b3a67f3450e531/rs.iudx.io/surat-itms --header 'token: auth.iudx.org.in/vasanth.rajaraman@datakaveri.org/896f2d9f8b866671a4341b882e3ba2b3'

      description: |
        Retrieve Adapter API allows a provider to fetch the list of `Subscribers` a.k.a [Streaming Consumers] for the data. Based on the input provided, the API validates the access control of the user with IUDX Auth server to allow or deny access to the API. 
        
        #### Retrieve Adapter Details
        To retrieve subscriber list, the provider must present the `id` and `token`. Retrieve API validates the request with the Auth server to allow or deny access to the provider.

      deprecated: false
      
    delete:
      tags:
      - Data Adaptor
      summary: Delete adaptor
      operationId: deleteadaptor
      parameters:
      - name: token
        in: header
        description: 'IUDX auth token for accessing API and the resource.'
        required: true
        style: simple
        schema:
          type: string
          maxLength: 512
          pattern: '^[a-zA-Z0-9\/\@\.]*$'
          
      - name: id
        in: path
        description: 'id of the adapter obtained from Register adapter.'
        required: true
        style: simple
        schema:
          type: string
          maxLength: 512          
      responses:
        200:
          description: 'Successful query'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deleteadapter'

        400:
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/adapterBadRequestErrorResponse"
          description: 'Bad query'

        401:
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/standardInvalidTokenErrorResponse"
          description: 'Unauthorized'

        404:
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/standardResourceNotFoundErrorResponse"
          description: 'Resource not found'

      x-codeSamples:
        - lang: 'by id'
          source: |
            https://rs.iudx.io/iudx/v1/adapter/iudx.io/aa9d66a000d94a78895de8d4c0b3a67f3450e531/rs.iudx.io/surat-itms --header 'token: auth.iudx.org.in/vasanth.rajaraman@datakaveri.org/896f2d9f8b866671a4341b882e3ba2b3'
 
      description: |
        Delete Adapter API allows a provider to delete a publisher. Once this is done all the `Subscribers` a.k.a [Streaming Consumers] and `Consumers` of the data with stop reveiving further updates. Based on the input provided, the API validates the access control of the user with IUDX Auth server to allow or deny access to the API. 
        
        #### Delete Adapter
        To delete an adapter, the provider must present the `id` and `token`. Delete API validates the request with the Auth server to allow or deny access to the provider.
                
      deprecated: false

  /ngsi-ld/v1/subscription:
    post:
      tags:
      - Data Subscriber
      summary: Create subscription
      operationId: createastreamingsubscription
      parameters:
      - name: token
        in: header
        description: 'IUDX auth token for accessing API and the resource.'
        required: true
        style: simple
        schema:
          type: string
          maxLength: 512
          pattern: '^[a-zA-Z0-9\/\@\.]*$'
          
      - name: options
        in: header
        description: 'Type of subscription, for e.g. streaming'
        required: true
        style: simple
        schema:
          type: string
          enum: [streaming]
      requestBody:
        description: 'Successful query'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createastreamingsubscriptionrequest'
        required: true
      responses:
        201:
          description: 'Successful query'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createstreaming'
        400:
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/adapterBadRequestErrorResponse"
          description: 'Bad query'

        401:
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/standardInvalidTokenErrorResponse"
          description: 'Unauthorized'

        409:
          description: 'Already exist'

      description: |
        Register Subscription API allows a subscriber to register an streaming subscription with IUDX Resource Server. Based on the input provided, the API validates the access control of the user with IUDX Auth server to allow or deny access to the API. 
        
        #### Register Subscription
        To register subscription, a user must request for consent from the provider, obtain a token from IUDX Auth server and then access the API with the following values:
          - `options`: A header parameter which specifies the type of subscription. Should be `streaming` to request for a streaming registration.
          - `name`: A user friendly `alias-name` of the subscription
          - `type`: Type of request. Should be `subscription`.
          - `entities`: An array of entities to subscribe.
          
      deprecated: false

  /ngsi-ld/v1/subscription/{id}:
    get:
      tags:
      - Data Subscriber
      summary: Retrieve subscription details
      operationId: getstreamingsubscription
      parameters:
      - name: token
        in: header
        description: 'IUDX auth token for accessing API and the resource.'
        required: true
        style: simple
        schema:
          type: string
          maxLength: 512
          pattern: '^[a-zA-Z0-9\/\@\.]*$'
          
      - name: options
        in: header
        description: 'Type of subscription, for e.g. streaming'
        required: true
        style: simple
        schema:
          type: string
          enum: [streaming]
      - name: id
        in: path
        description: 'Subscription ID obtained during registration.'
        required: true
        style: simple
        schema:
          type: string
          maxLength: 512

      responses:
        200:
          description: 'Successful query'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/retrievestreaming'
        400:
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/adapterBadRequestErrorResponse"
          description: 'Bad query'

        401:
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/standardInvalidTokenErrorResponse"
          description: 'Unauthorized'

        404:
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/standardResourceNotFoundErrorResponse"
          description: 'Resource not found'

      deprecated: false

      x-codeSamples:
        - lang: 'by id'
          source: |
            https://rs.iudx.io/ngsi-ld/v1/subscription/iudx.io/3ae88e7ba006938ffc38203d326b1711b892226d/alias-name-of-application --header 'token: auth.iudx.org.in/vasanth.rajaraman@datakaveri.org/896f2d9f8b866671a4341b882e3ba2b3'

      description: |
        Retrieve Subscription API allows a subscriber to fetch the list of `entities` subscribed. Based on the input provided, the API validates the access control of the user with IUDX Auth server to allow or deny access to the API. 
        
        #### Retrieve Subscription Details
        To retrieve subscriber list, the provider must present the `id` and `token`. Retrieve API validates the request with the Auth server to allow or deny access to the subscriber.
          - `options`: A header parameter which specifies the type of subscription. Should be `streaming` to request for a streaming registration.

      
    patch:
      tags:
      - Data Subscriber
      summary: Append subscription
      operationId: appendstreamingsubscription
      parameters:
      - name: token
        in: header
        description: 'IUDX auth token for accessing API and the resource.'
        required: true
        style: simple
        schema:
          type: string
          maxLength: 512
          pattern: '^[a-zA-Z0-9\/\@\.]*$'
          
      - name: options
        in: header
        description: 'Type of subscription, for e.g. streaming'
        required: true
        style: simple
        schema:
          type: string
          enum: [streaming]
      - name: id
        in: path
        description: 'Subscription ID obtained during registration.'
        required: true
        style: simple
        schema:
          type: string
          maxLength: 512          
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/appendstreamingsubscriptionrequest'
        required: true
      responses:
        201:
          description: 'Successful query'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/appendstreaming'
        400:
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/adapterBadRequestErrorResponse"
          description: 'Bad query'

        401:
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/standardInvalidTokenErrorResponse"
          description: 'Unauthorized'

        404:
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/standardResourceNotFoundErrorResponse"
          description: 'Resource not found'

      description: |
        Append Subscription API allows a subscriber to add a new stream to the list of `entities` subscribed. Based on the input provided, the API validates the access control of the user with IUDX Auth server to allow or deny access to the API. 
        
        #### Append Subscription 
        To append an entity to the subscriber list, the provider must present the `id` and `token` along with the list of `entities`. Append API validates the request with the Auth server to allow or deny access to the subscriber.
          - `options`: A header parameter which specifies the type of subscription. Should be `streaming` to request for a streaming registration.

      deprecated: false
      
    put:
      tags:
      - Data Subscriber
      summary: Update subscription
      operationId: updatestreamingsubscription
      parameters:
      - name: token
        in: header
        description: 'IUDX auth token for accessing the API'
        required: true
        style: simple
        schema:
          type: string
          maxLength: 512
          pattern: '^[a-zA-Z0-9\/\@\.]*$'
          
      - name: options
        in: header
        description: 'Type of subscription, for e.g. streaming'
        required: true
        style: simple
        schema:
          type: string
          enum: [streaming]
      - name: id
        in: path
        description: 'Subscription ID obtained during registration.'
        required: true
        style: simple
        schema:
          type: string
          maxLength: 512          
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updatestreamingsubscriptionrequest'
        required: true
      responses:
        201:
          description: 'Successful query'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/updatestreaming'
        400:
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/adapterBadRequestErrorResponse"
          description: 'Bad query'

        401:
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/standardInvalidTokenErrorResponse"
          description: 'Unauthorized'

        404:
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/standardResourceNotFoundErrorResponse"
          description: 'Resource not found'

      description: |
        Update Subscription API allows a subscriber to replace the list of `entities` subscribed. Based on the input provided, the API validates the access control of the user with IUDX Auth server to allow or deny access to the API. 
        
        #### Update (Replace) Subscription 
        To replace the subscriber list, the provider must present the `id` and `token` along with the list of `entities`. Update API validates the request with the Auth server to allow or deny access to the subscriber.
          - `options`: A header parameter which specifies the type of subscription. Should be `streaming` to request for a streaming registration.

      deprecated: false
      
    delete:
      tags:
      - Data Subscriber
      summary: Delete subscription
      operationId: deleteasubscription
      parameters:
      - name: options
        in: header
        description: 'Type of subscription, for e.g. streaming'
        required: true
        style: simple
        schema:
          type: string
          enum: [streaming]
          
      - name: token
        in: header
        description: 'IUDX auth token for accessing the API'
        required: true
        style: simple
        schema:
          type: string
          maxLength: 512
          pattern: '^[a-zA-Z0-9\/\@\.]*$'
          
      - name: id
        in: path
        description: 'Subscription ID obtained during registration.'
        required: true
        style: simple
        schema:
          type: string
          maxLength: 512
          
      responses:
        200:
          description: 'Successful query'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deletestreaming'
        400:
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/adapterBadRequestErrorResponse"
          description: 'Bad query'

        401:
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/standardInvalidTokenErrorResponse"
          description: 'Unauthorized'

        404:
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/standardResourceNotFoundErrorResponse"
          description: 'Resource not found'

      x-codeSamples:
        - lang: 'by id'
          source: |
            https://rs.iudx.io/ngsi-ld/v1/subscription/iudx.io/3ae88e7ba006938ffc38203d326b1711b892226d/alias-name-of-application --header 'token: auth.iudx.org.in/vasanth.rajaraman@datakaveri.org/896f2d9f8b866671a4341b882e3ba2b3'

      description: |
        Delete Subscription API allows a subscriber to delete the subscription. Based on the input provided, the API validates the access control of the user with IUDX Auth server to allow or deny access to the API. 
        
        #### Delete Subscription 
        To delete the subscription list, the provider must present the `id` and `token`. Delete API validates the request with the Auth server to allow or deny access to the subscriber.
          - `options`: A header parameter which specifies the type of subscription. Should be `streaming` to request for a streaming registration.

      deprecated: false

      

components:
  schemas:
    createastreamingsubscriptionrequest:
      title: createastreamingsubscriptionrequest
      required:
      - name
      - type
      - entities
      type: object
      properties:
        name:
          type: string
          maxLength: 512          
        type:
          type: string
          enum: [subscription]

        entities:
          type: array
          minItems: 1
          maxItems: 5
          items:
            type: string
          description: ''
      example:
        name: alias-name-of-application
        type: subscription
        entities:
        - iudx.io/aa9d66a000d94a78895de8d4c0b3a67f3450e531/rs.iudx.io/surat-itms/*
    appendstreamingsubscriptionrequest:
      title: appendstreamingsubscriptionrequest
      required:
      - name
      - type
      - entities
      type: object
      properties:
        name:
          type: string
          maxLength: 512          
          
        type:
          type: string
          enum: [subscription]

        entities:
          type: array
          minItems: 1
          maxItems: 5

          items:
            type: string
          description: ''
      example:
        name: alias-name-of-application
        type: subscription
        entities:
        - iudx.io/aa9d66a000d94a78895de8d4c0b3a67f3450e531/rs.iudx.io/surat-itms/.*
    updatestreamingsubscriptionrequest:
      title: updatestreamingsubscriptionrequest
      required:
      - name
      - type
      - entities
      type: object
      properties:
        name:
          type: string
          maxLength: 512          
          
        type:
          type: string
          enum: [subscription]

        entities:
          type: array
          minItems: 1
          maxItems: 5

          items:
            type: string
          description: ''
      example:
        name: alias-name-of-application
        type: subscription
        entities:
        - iudx.io/aa9d66a000d94a78895de8d4c0b3a67f3450e531/rs.iudx.io/surat-itms/.*
    geospatial-circlerequest:
      title: geospatial-circlerequest
      required:
      - type
      - entities
      - geoQ
      type: object
      properties:
        type:
          type: string
        entities:
          type: array
          items:
            $ref: '#/components/schemas/Entity'
          description: ''
        geoQ:
          $ref: '#/components/schemas/GeoQ'
      example:
        type: Query
        entities:
        - id: iudx.io/aa9d66a000d94a78895de8d4c0b3a67f3450e531/rs.iudx.io/varanasi-swm-vehicles/varanasi-swm-vehicles-live
        geoQ:
          geometry: Point
          coordinates:
          - 25.319768
          - 82.987988000000001
          georel: near;maxDistance=1000
          geoproperty: geoJsonLocation
    Entity:
      title: Entity
      required:
      - id
      type: object
      properties:
        id:
          type: string
          maxLength: 512
          description: 'A <b> valid IUDX ID </b> of the resource.  <br/> If the resource is a <b> protected resource </b> a <b> valid IUDX Auth token </b> is <b> mandatory </b>  in the header parameter of the request.  <br/> Information about the IUDX ID of the resource and security scope of the resource can be obtained from the <b> IUDX catalogue server </b> .'     
      example:
        id: iudx.io/aa9d66a000d94a78895de8d4c0b3a67f3450e531/rs.iudx.io/varanasi-swm-vehicles/varanasi-swm-vehicles-live
    GeoQ:
      title: GeoQ
      required:
      - geometry
      - coordinates
      - georel
      - geoproperty
      type: object
      properties:
        geometry:
          type: string
          enum: [Point (or) point, Polygon (or) polygon, bbox, LineString (or) linestring]
          description: 'The geometry type of <b>geoquery</b> to be performed. <br/> This <b>should</b> be one from the available options in the Enum list. <br/>The list is <b>case sensitive</b>'          
        coordinates:
          type: array
          minItems: 1
          maxItems: 10
          items:
            type: number
          description: 'The coordinates for a specific geometry query type. <br/> This parameter accepts both <b> one dimentional array and multi dimentional arrays </b> based on the <b> geometry</b> type. <br/> For e.g, [longitude-1,latitude-1] should be used for geometry <b>point</b>.  <br/>[[[longitude-1,latitude-1], [longitude-2,latitude-2],...., [longitude-n,latitude-n]]] should be used for geometry <b>polygon</b>. <br/> [[longitude-1,latitude-1], [longitude-2,latitude-2],...., [longitude-n,latitude-n]] should be used for geometry <b>bbox and linestring </b>. <br/> Maximum of 10 latitude, longitude pairs can be used for geometry <b>polygon, bbox and linestring </b>. <br/> Note: The data-type of this field is a string, therefore the coordinates are a string encoded multidimensional array. <br/> Maximum precision allowed is upto 6 decimal places.'
        georel:
          type: string
          enum: [within, contains, intersects]
          description: 'The relation type of <b>geoquery</b> to be performed. <br/> This <b>should</b> be one from the available options in the Enum list. <br/> The relation <b> near </b> should be always accomodated with a <b> maxdistance </b> property. <br/> Apart from <b> maxdistance</b> , all other fields in the Enum list are <b> case sensitive </b> fields. <br/> The relation <b> near;maxdistance </b> is applicable only for a <b> point </b>.  <br/> The relation <b> within </b> and  <b> intersects </b> are applicable only for <b> bbox, polygon and linestring</b>.'          
        geoproperty:
          type: string
          enum: [location]          
          description: 'Name of the <b> geospatial </b> property in the <b> IUDX data descriptor </b>. <br /> The current version of the API <b> mandates </b> it to be equal to `location`'
      example:
        geometry: Point
        coordinates:
        - 25.319768
        - 82.987988000000001
        georel: near;maxDistance=1000
        geoproperty: geoJsonLocation
    geospatial-circlecount-request:
      title: geospatial-circle(count)request
      required:
      - type
      - entities
      - geoQ
      - options
      type: object
      properties:
        type:
          type: string
        entities:
          type: array
          items:
            $ref: '#/components/schemas/Entity'
          description: ''
        geoQ:
          $ref: '#/components/schemas/GeoQ'
        options:
          type: string
      example:
        type: Query
        entities:
        - id: iudx.io/aa9d66a000d94a78895de8d4c0b3a67f3450e531/rs.iudx.io/varanasi-swm-vehicles/varanasi-swm-vehicles-live
        geoQ:
          geometry: Point
          coordinates:
          - 25.319768
          - 82.987988000000001
          georel: near;maxDistance=100
          geoproperty: geoJsonLocation
        options: count
    geospatial-polygonrequest:
      title: geospatial-polygonrequest
      required:
      - type
      - entities
      - geoQ
      type: object
      properties:
        type:
          type: string
        entities:
          type: array
          items:
            $ref: '#/components/schemas/Entity'
          description: ''
        geoQ:
          $ref: '#/components/schemas/GeoQ2'
    GeoQ2:
      title: GeoQ2
      required:
      - geometry
      - coordinates
      - georel
      - geoproperty
      type: object
      properties:
        geometry:
          type: string
        coordinates:
          type: array
          items:
            type: array
            items:
              type: number
        georel:
          type: string
        geoproperty:
          type: string
    geospatial-linestringrequest:
      title: geospatial-linestringrequest
      required:
      - type
      - entities
      - geoQ
      type: object
      properties:
        type:
          type: string
        entities:
          type: array
          items:
            $ref: '#/components/schemas/Entity'
          description: ''
        geoQ:
          $ref: '#/components/schemas/GeoQ2'
      example:
        type: Query
        entities:
        - id: iudx.io/aa9d66a000d94a78895de8d4c0b3a67f3450e531/rs.iudx.io/varanasi-swm-vehicles/varanasi-swm-vehicles-live
        geoQ:
          geometry: linestring
          coordinates:
          - - 82.973500000000001
            - 25.3352
          - - 82.989400000000003
            - 25.345199999999998
          - - 82.989999999999995
            - 25.34
          georel: intersects
          geoproperty: geoJsonLocation
    geospatial-bboxrequest:
      title: geospatial-bboxrequest
      required:
      - type
      - entities
      - geoQ
      type: object
      properties:
        type:
          type: string
        entities:
          type: array
          items:
            $ref: '#/components/schemas/Entity'
          description: ''
        geoQ:
          $ref: '#/components/schemas/GeoQ2'
      example:
        type: Query
        entities:
        - id: iudx.io/aa9d66a000d94a78895de8d4c0b3a67f3450e531/rs.iudx.io/varanasi-swm-vehicles/varanasi-swm-vehicles-live
        geoQ:
          geometry: bbox
          coordinates:
          - - 82.950000000000003
            - 25.3567
          - - 83.005300000000005
            - 25
          georel: within
          geoproperty: geoJsonLocation
    responsefilterrequest:
      title: responsefilterrequest
      required:
      - type
      - entities
      - attrs
      type: object
      properties:
        type:
          type: string
        entities:
          type: array
          items:
            $ref: '#/components/schemas/Entity'
          description: ''
        attrs:
          type: string
      example:
        type: Query
        entities:
        - id: iudx.io/aa9d66a000d94a78895de8d4c0b3a67f3450e531/rs.iudx.io/varanasi-swm-vehicles/varanasi-swm-vehicles-live
        attrs: resource-id,latitude,longitude
    geospatial-circle-responsefilterrequest:
      title: geospatial-circle+responsefilterrequest
      required:
      - type
      - entities
      - geoQ
      - attrs
      type: object
      properties:
        type:
          type: string
        entities:
          type: array
          items:
            $ref: '#/components/schemas/Entity'
          description: ''
        geoQ:
          $ref: '#/components/schemas/GeoQ'
        attrs:
          type: string
      example:
        type: Query
        entities:
        - id: iudx.io/aa9d66a000d94a78895de8d4c0b3a67f3450e531/rs.iudx.io/varanasi-swm-vehicles/varanasi-swm-vehicles-live
        geoQ:
          geometry: Point
          coordinates:
          - 25.319768
          - 82.987988000000001
          georel: near;maxDistance=1000
          geoproperty: geoJsonLocation
        attrs: resource-id,longitude,latitude
    temporal-duringrequest:
      title: temporal-duringrequest
      required:
      - type
      - entities
      - temporalQ
      type: object
      properties:
        type:
          type: string
        entities:
          type: array
          items:
            $ref: '#/components/schemas/Entity'
          description: ''
        temporalQ:
          $ref: '#/components/schemas/TemporalQ'
      example:
        type: Query
        entities:
        - id: iudx.io/aa9d66a000d94a78895de8d4c0b3a67f3450e531/rs.iudx.io/varanasi-swm-vehicles/varanasi-swm-vehicles-live
        temporalQ:
          timerel: during
          time: 2020-06-01T14:20:00Z
          endtime: 2020-06-03T15:00:00Z
          timeProperty: timeProperty
    TemporalQ:
      title: TemporalQ
      required:
      - timerel
      - time
      - endtime
      - timeProperty
      type: object
      properties:
        timerel:
          type: string
          enum: [during, before, after]    
          description: 'The temporal relation type of <b>timerel</b> to be performed. <br/> This <b>should</b> be one from the available options in the Enum list. <br/> If the relation is <b> during </b> it should be always accomodated with a <b> time </b> and <b> endtime </b> property.  <br/> If the relation is <b> before </b> or <b> after </b>it should be always accomodated <b> only</b> with a <b> time </b> property.'      
        time:
          type: string
          description: 'This parameter specifies the <b>start time</b> for the temporal-query in `ISO8601` format. <br/> IUDX currently accepts `IST` and `UTC` time zones for the temporal query.'
        endtime:
          type: string
          description: 'This parameter specifies the <b>end time</b> for the temporal-query in `ISO8601` format. <br/> IUDX currently accepts `IST` and `UTC` time zones for the temporal query. <br/>If <b>timerel</b> is `during` time and endtime are mandatory'
        timeProperty:
          type: string
          enum: [observationDateTime]
      example:
        timerel: during
        time: 2020-06-01T14:20:00Z
        endtime: 2020-06-03T15:00:00Z
        timeProperty: observationDateTime
    time-beforerequest:
      title: time-beforerequest
      required:
      - type
      - entities
      - temporalQ
      type: object
      properties:
        type:
          type: string
        entities:
          type: array
          items:
            $ref: '#/components/schemas/Entity'
          description: ''
        temporalQ:
          $ref: '#/components/schemas/TemporalQ1'
      example:
        type: Query
        entities:
        - id: iudx.io/aa9d66a000d94a78895de8d4c0b3a67f3450e531/rs.iudx.io/varanasi-swm-vehicles/varanasi-swm-vehicles-live
        temporalQ:
          timerel: before
          time: 2020-06-01T14:20:00Z
          timeProperty: timeProperty
    TemporalQ1:
      title: TemporalQ1
      required:
      - timerel
      - time
      - timeProperty
      type: object
      properties:
        timerel:
          type: string
        time:
          type: string
        timeProperty:
          type: string
      example:
        timerel: before
        time: 2020-06-01T14:20:00Z
        timeProperty: timeProperty
    complex-geo-circle-time-filterrequest:
      title: complex-geo-(circle)+time+filterrequest
      required:
      - type
      - entities
      - geoQ
      - temporalQ
      - attrs
      type: object
      properties:
        type:
          type: string
          enum: [Query]
        entities:
          type: array
          items:
            $ref: '#/components/schemas/Entity'
          description: ''
        geoQ:
          $ref: '#/components/schemas/GeoQ'
        temporalQ:
          $ref: '#/components/schemas/TemporalQ'
        q:
          type: string
          maxLength: 512
          description: 'The attribute query is used for querying <b> allowed quantitative</b> properties. <br/> Used to query on a value of a resource attribute using `<`,`>`,`<=`,`>=`,`!=`, `==` operators. <br/> For e.g, attribute > value, attribute < value, attribute >= value, attribute <= value, attribute != value and attribute == value. <br/> Allowed values for all operators is double. <br/> For the operator `==` if the query is on `id` then the only value allowed is an `IUDX ID` of a resource.'
        attrs:
          type: string
          maxLength: 512
          description: 'The attrs parameter is used as an <b>application filter</b>. <br/> This is an optional parameter. It can be used to provide the list of attributes which the consumer expects to be responded by the server. <br/> The consumer is expected to provide <b>only</b> the attributes available in the <b>data descriptor</b> of the item in the IUDX Catalogue. <br/> Minimum of 1 and a Maximum of 5 attributes can be provided in a comma separated fashion.'
        options:
          type: string
          enum: [count]
          description: 'The <b>options</b> parameter is used for obtaining the <b>number of hits</b> for a spatial query. <br/> It should be used along with the <b> valid temporal query</b> or a <b> valid complex query</b>. <br/> It <b>cannot</b> be used along with a <b>attrs</b> filter. The value should be equal to `count` and it is <b>case sensitive</b>'

      example:
        type: Query
        entities:
        - id: iudx.io/aa9d66a000d94a78895de8d4c0b3a67f3450e531/rs.iudx.io/varanasi-swm-vehicles/varanasi-swm-vehicles-live
        geoQ:
          geometry: Point
          coordinates:
          - 25.319768
          - 82.987988000000001
          georel: near;maxDistance=1000
          geoproperty: geoJsonLocation
        temporalQ:
          timerel: during
          time: 2020-06-01T14:20:00Z
          endtime: 2020-06-03T15:00:00Z
          timeProperty: timeProperty
        attrs: resource-id,latitude,longitude
    registeradapterrequest:
      title: registeradapterrequest
      required:
      - resourceGroup
      - resourceServer
      type: object
      properties:
        resourceGroup:
          type: string
          maxLength: 50          
        resourceServer:
          type: string
          maxLength: 50          
      example:
        resourceGroup: aqm
        resourceServer: example.com

    entityresponse:
      title: entityresponse
      type: object
      properties:
        type:
          type: string
        title:
          type: string
        results:
          type: object
          properties:
            id:
              type: string
            observationDateTime:
              type: string
            trip_id:
              type: string
            route_id:
              type: string

      example:
        type: 200
        title: success
        results: [
         { "id": "suratmunicipal.org/6db486cb4f720e8585ba1f45a931c63c25dbbbda/rs.iudx.org.in/surat-itms-realtime-info/surat-itms-live-eta",
         "observationDateTime": "2020-06-01T14:20:00Z",
         "trip_id": 23958368,
         "route_id": 14U
         }
         ]
    registeradapter:
      title: registeradapter
      required:
      - username
      - apiKey
      - id
      - URL
      - port
      - vHost
      type: object
      properties:
        username:
          type: string
        apiKey:
          type: string
        id:
          type: string
        URL:
          type: string
        port:
          type: string
        vHost:
          type: string
      example:
        username: iudx.io/3ae88e7ba006938ffc38203d326b1711b892226d
        apiKey: 123456
        id: iudx.io/aa9d66a000d94a78895de8d4c0b3a67f3450e531/rs.iudx.io/surat-itms
        URL: databroker.iudx.io
        port: 24567
        vHost: IUDX

    retrieveadapter:
      title: retrieveadapter
      required:
      - database
      - adaptorLogs
      type: object
      properties:
        database:
          type: array
          items:
            type: string
        adaptorLogs:
          type: array
          items:
            type: string
      example:
        database: ["iudx.io/aa9d66a000d94a78895de8d4c0b3a67f3450e531/rs.iudx.io/surat-itms/.*"]
        adaptorLogs: ["iudx.io/aa9d66a000d94a78895de8d4c0b3a67f3450e531/rs.iudx.io/surat-itms/.dataIssue", "iudx.io/aa9d66a000d94a78895de8d4c0b3a67f3450e531/rs.iudx.io/surat-itms/.downstreamIssue", "iudx.io/aa9d66a000d94a78895de8d4c0b3a67f3450e531/rs.iudx.io/surat-itms/.heartbeat"]

    deleteadapter:
      title: deleteadapter
      required:
      - type
      - title
      - detail
      type: object
      properties:
        type:
          type: string
        title:
          type: string
        detail:
          type: string
      example:
        type: 200
        title: success
        detail: Adapter deleted

    createstreaming:
      title: createstreaming
      required:
      - username
      - apiKey
      - id
      - URL
      - port
      - vHost
      type: object
      properties:
        username:
          type: string
        apiKey:
          type: string
        id:
          type: string
        URL:
          type: string
        port:
          type: string
        vHost:
          type: string
      example:
        username: iudx.io/3ae88e7ba006938ffc38203d326b1711b892226d
        apiKey: 123456
        id: iudx.io/3ae88e7ba006938ffc38203d326b1711b892226d/alias-name-of-application
        URL: databroker.iudx.io
        port: 24567
        vHost: IUDX


    retrievestreaming:
      title: retrievestreaming
      required:
      - entities
      type: object
      properties:
        entities:
          type: array
          items:
            type: string
      example:
        entities: ["iudx.io/aa9d66a000d94a78895de8d4c0b3a67f3450e531/rs.iudx.io/surat-itms/.*"]           
        
    appendstreaming:
      title: appendstreaming
      required:
      - entities
      type: object
      properties:
        entities:
          type: array
          items:
            type: string
      example:
        entities: ["iudx.io/aa9d66a000d94a78895de8d4c0b3a67f3450e531/rs.iudx.io/surat-itms/.*"]  
        
    updatestreaming:
      title: updatestreaming
      required:
      - entities
      type: object
      properties:
        entities:
          type: array
          items:
            type: string
      example:
        entities: ["iudx.io/aa9d66a000d94a78895de8d4c0b3a67f3450e531/rs.iudx.io/surat-itms/.*"]  
                 
    deletestreaming:
      title: deletestreaming
      required:
      - type
      - title
      - detail
      type: object
      properties:
        type:
          type: string
        title:
          type: string
        detail:
          type: string
      example:
        type: 200
        title: success
        detail: Subscription deleted
          
    standardBadRequestErrorResponse:
      title: standardBadRequestErrorResponse
      properties:
        type:
          type: string
        title:
          type: string
        detail:
          type: string
      example:
        type: 400
        title: Bad Request Data
        detail: Empty response | Missing/Invalid temporal parameters | Missing/Invalid geo parameters | Count is not supported with filtering
        
    standardInvalidTokenErrorResponse:
      title: standardInvalidTokenErrorResponse
      properties:
        type:
          type: string
        title:
          type: string
        detail:
          type: string
      example:
        type: 401
        title: Invalid credentials
        detail: Invalid credentials

    standardResourceNotFoundErrorResponse:
      title: standardResourceNotFoundErrorResponse
      properties:
        type:
          type: string
        title:
          type: string
        detail:
          type: string
      example:
        type: 404
        title: Not Found
        detail: Resource Not Found

    adapterBadRequestErrorResponse:
      title: adapterBadRequestErrorResponse
      properties:
        type:
          type: string
        title:
          type: string
        detail:
          type: string
      example:
        type: 400
        title: Bad Request Data
        detail: Missing/Invalid parameters