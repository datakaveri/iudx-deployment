
namespace: cat

image: dockerhub.iudx.io/iudx/cat-prod:3.0-1cc8c35

imagePullSecrets: regcred 

volumeConfigPath: /usr/share/app/secrets/one-verticle-configs

volumeSecretPath: /usr/share/app/secrets/

nodeSelector:
  enable: false
  selector: [
    node.kubernetes.io/instance-type: t3.medium,
    hudu: hihh
  ]




containerPorts:
  http:
    port: 80
    protocol: TCP
  hazelcast:
    port: 5701
    protocol: TCP
  prometheus:
    port: 9000
    protocol: TCP
    scrape: true

livenessProbe:
  httpGet:
    path: /metrics
    port: 9000

configMapRef: cat-env
env:
  fieldPath: status.podIP

initialDelaySeconds: 60
periodSeconds: 60
timeoutSeconds: 10


ingress:
  enabled: true
  rateLimitAnnotation: false
  annotations: {}
  hosts:
    - host: cat.test.io
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: 
    - secretName: catalogue-tls-secret
      hosts:
        - cat.test.io

service:
    type: ClusterIP
    port: 80
    targetPort: 80
    selector: [ 
      app: cat-api-server, 
    ]



apiserver:
  replicas: 1
  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 5
    targetCPUUtilizationPercentage: 80
    #targetMemoryUtilizationPercentage: 80
  labels: [
      app: cat-api-server,
      ]
  limits:
    cpu: 800m
    memory: 1.2Gi
  requests:
    cpu: 6m
    memory: 10Mi
  command: ["/bin/bash"]
  args: ["-c","exec java -Xmx1024m -Dvertx.logger-delegate-factory-class-name=io.vertx.core.logging.Log4j2LogDelegateFactory -jar ./fatjar.jar  --host $$MY_POD_IP -c secrets/one-verticle-configs/config-apiserver.json"]
  

auditing:
  replicas: 1
  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 5
    targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80
  labels: [
    app: cat-auditing
  ]
  limits:
    cpu: 500m
    memory: 750Mi
  requests:
    cpu: 50m
    memory: 70Mi
  command: ["/bin/bash"]
  args: ["-c","exec java -Xmx1024m -Dvertx.logger-delegate-factory-class-name=io.vertx.core.logging.Log4j2LogDelegateFactory  -jar ./fatjar.jar  --host $$MY_POD_IP -c secrets/one-verticle-configs/config-auditing.json"]
     

authenticator:
  replicas: 1
  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 5
    targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80
  labels: [
    app: cat-authenticator
  ]
  limits:
    cpu: 500m
    memory: 800Mi
  requests:
    cpu: 30m
    memory: 80Mi
  command: ["/bin/bash"]
  args: ["-c","exec java -Xmx1024m -Dvertx.logger-delegate-factory-class-name=io.vertx.core.logging.Log4j2LogDelegateFactory  -jar ./fatjar.jar  --host $$MY_POD_IP -c secrets/one-verticle-configs/config-authenticator.json"]



database:
  replicas: 1
  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 5
    targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80
  labels: [
    app: cat-database
  ]
  limits:
    cpu: 800m
    memory: 1.2Gi
  requests:
    cpu: 6m
    memory: 200Mi
  command: ["/bin/bash"]
  args: ["-c","exec java -Xmx1024m -Dvertx.logger-delegate-factory-class-name=io.vertx.core.logging.Log4j2LogDelegateFactory -jar ./fatjar.jar  --host $$MY_POD_IP -c secrets/one-verticle-configs/config-database.json"]

validator:
  replicas: 1
  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 5
    targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80
  labels: [
    app: cat-validator
  ]
  limits:
    cpu: 800m
    memory: 1.2Gi
  requests:
    cpu: 6m
    memory: 200Mi
  command: ["/bin/bash"]
  args: ["-c","exec java  -Xmx1024m -Dvertx.logger-delegate-factory-class-name=io.vertx.core.logging.Log4j2LogDelegateFactory   -jar ./fatjar.jar  --host $$MY_POD_IP -c secrets/one-verticle-configs/config-validator.json"]
          
# Default values for cat-helm-test.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
replicaCount: 1

#image:
 # repository: nginx
 # pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  #tag: ""

#imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000



  

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi





tolerations: []

affinity: {}
