version: "3.9"

networks:
  default:
    name: overlay-net
    external: true
    driver: overlay


services:
  rabbitmq:
    image: docker.io/bitnami/rabbitmq:3.11.10-debian-11-r4  # using ubuntu based images as its officially supported
    #setting the hostname, so that when same/new container restarts it uses the same directory to save i.e "/var/lib/rabbitmq/rabbit@hostname"
    hostname: rabbitmq
    env_file:
      - ./secrets/.rabbitmq.env 
   # volume stores metadata of queues, excahnges and also persistent queue messages
    volumes:
      - type: volume
        source: rabbitmq-volume
        target: /bitnami/rabbitmq/mnesia

    # uid and gid of 'rabbitmq' is 999 in ubuntu based, uid=100, gid-101 in alpine based
    secrets: 
      - source: rabbitmq-ca-cert.pem 
        uid: '1001' 
        gid: '0' 
        mode: 0400 #by default it will be 0444
      - source: rabbitmq-server-cert.pem 
        uid: '1001'
        gid: '0'  
        mode: 0400 #by default it will be 0444
      - source: rabbitmq-server-key.pem 
        uid: '1001'
        gid: '0'  
        mode: 0400 #by default it will be 0444

    configs:
    - source: rabbitmq-config
      target: /bitnami/rabbitmq/conf/custom.conf
    ports:
      - target: 15671    # https management port 
        published: 28041
        mode: host
      - target: 5671     # amqps port 
        published: 24567
        mode: host
    logging:
      driver: "json-file"
      options:
        max-file: "3"
        max-size: "5m"
        tag: "{\"name\":\"{{.Name}}\",\"id\":\"{{.ID}}\"}"
    deploy:
      replicas: 1 
      #placing in particular node with label 'databroker_node=true'
      placement:
        constraints:
          - "node.labels.databroker_node==true"
      restart_policy:
        condition: on-failure
        delay: 5s
        window: 10s


volumes:
  rabbitmq-volume:


configs:
  rabbitmq-config:
    file:  rabbitmq/conf/rabbitmq.conf

secrets:
  rabbitmq-ca-cert.pem:
    file: secrets/pki/rabbitmq-ca-cert.pem
  rabbitmq-server-cert.pem:
    file: secrets/pki/rabbitmq-server-cert.pem
  rabbitmq-server-key.pem:
    file: secrets/pki/rabbitmq-server-key.pem
  rabbitmq-admin-passwd: # rabbimq passwd of admin user
    file: secrets/passwords/admin-password
