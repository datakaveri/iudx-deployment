version: "3.4"
networks:
  default:
    external:
      name: overlay-net
    driver: overlay
    
services:
  vertx_sd:
    image: ghcr.io/datakaveri/vertx_sd:1.0.0
    volumes:
      - type: bind
        source: /tmp/metrics-targets
        target: /tmp/metrics-targets
    deploy:
      placement:
        constraints:
          - "node.labels.monitoring_node==true"
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        window: 10s

  prometheus:
    image: prom/prometheus
    user: root
    volumes:
      - type: volume
        source: prometheus-volume
        target: /prometheus
        volume:
          nocopy: true
      - type: bind
        source: /tmp/metrics-targets
        target: /tmp/metrics-targets
        read_only: true
    configs:
      - source: prometheus-settings
        target: /etc/prometheus/prometheus.yml
    deploy:
      placement:
        constraints:
          - "node.labels.monitoring_node==true"
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        window: 10s
 
  loki:
    image: grafana/loki:2.0.0
    #transfer of logs to loki over overlay
    user: root
    volumes:
      - type: volume
        source: loki-volume
        target: /data/loki
        volume:
          nocopy: true
    configs: 
      - source: loki-settings
        target:  /usr/share/loki-conf/loki-config.yml
    command: -config.file=/usr/share/loki-conf/loki-config.yml
    deploy:
      placement:
        constraints:
          - "node.labels.monitoring_node==true"
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        window: 10s


  grafana:
    image: ghcr.io/datakaveri/grafana:7.2.2
    user: root
    volumes:
      - type: volume
        source: grafana-volume
        target: /var/lib/grafana
        volume:
          nocopy: true
    secrets:
      - grafana-super-admin-passwd
      - grafana-super-admin-username
      - grafana-server-cert.pem
      - grafana-server-key.pem
    environment:
      - GF_SECURITY_ADMIN_USER__FILE=/run/secrets/grafana-super-admin-username
      - GF_SECURITY_ADMIN_PASSWORD__FILE=/run/secrets/grafana-super-admin-passwd
      - GF_PATHS_CONFIG=/usr/share/grafana-conf/custom.ini
      - GF_PATHS_DATA=/var/lib/grafana 
      - GF_PATHS_PROVISIONING=/usr/share/grafana-conf/provisioning
    configs:
      - source: grafana-settings
        target: /usr/share/grafana-conf/custom.ini
      - source: grafana-dashboards
        target: /usr/share/grafana-conf/provisioning/dashboards/config.yml
      - source: grafana-datasources
        target: /usr/share/grafana-conf/provisioning/datasources/config.yml
      - source: grafana-notifiers
        target: /usr/share/grafana-conf/provisioning/notifiers/config.yml
    deploy:
      replicas: 1
      placement:
        constraints:
          - "node.labels.monitoring_node==true"
      restart_policy:
        condition: on-failure
        delay: 5s
        window: 10s
    env_file: 
     - ./.grafana.env 

  promtail:
    image: grafana/promtail:2.0.0
    entrypoint: /run.sh
    user: root
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
        delay: 5s
        window: 10s
    configs:
    - source: promtail-settings
      target: /usr/share/promtail-conf/promtail-config.yml
    - source: promtail-script
      target: /run.sh
      mode: 0755
    volumes:
      - type: bind
        source: /var/log/  #this is to store postions.yml,auth logs
        target: /var/log/
      - type: bind
        source: /var/lib/docker/containers/ # all conatiner logs
        target: /var/lib/docker/containers/
        read_only: true
      - type: bind
        source: /tmp/         # cat and rs logs
        target: /tmp/
        read_only: true
    environment:
      - NODE_HOSTNAME={{.Node.Hostname}}
      
volumes:
  prometheus-volume:
  grafana-volume:
  loki-volume:

configs:
  loki-settings:
    file: loki/conf/loki-config.yml
  grafana-settings:
    file:  grafana/conf/custom.ini
  grafana-dashboards:
    file:  grafana/conf/provisioning/dashboards/config.yml
  grafana-datasources:
    file: grafana/conf/provisioning/datasources/config.yml
  grafana-notifiers:
    file: grafana/conf/provisioning/notifiers/config.yml
  promtail-settings:
    file:  promtail/conf/promtail-config.yml  
  promtail-script:
    file: promtail/run.sh
  prometheus-settings:
    file:  prometheus/conf/prometheus.yml

secrets:
  grafana-super-admin-passwd:
    file: secrets/passwords/grafana-super-admin-passwd
  grafana-super-admin-username:
    file: secrets/passwords/grafana-super-admin-username
  grafana-server-cert.pem:
    file: secrets/pki/grafana-server-cert.pem
  grafana-server-key.pem:
    file: secrets/pki/grafana-server-key.pem
  
