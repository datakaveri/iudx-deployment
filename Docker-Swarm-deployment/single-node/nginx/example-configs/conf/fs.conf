 # Main block for file server

    server {
        listen 443  ssl http2 ;
        server_name         file.io.test;
         
	    ssl_certificate     /etc/default-ssl/fullchain.pem;
        ssl_certificate_key /etc/default-ssl/privkey.pem;
        
        # include error codes 
        include /etc/nginx/error.conf;

        # include security headers
        add_header Referrer-Policy   "no-referrer-when-downgrade" always;
        add_header X-Frame-Options   "deny" always;
        add_header X-XSS-Protection  "1; mode=block" always;
        add_header X-Permitted-Cross-Domain-Policies  "none" always;
        add_header Cross-Origin-Embedder-Policy "require-corp" always;
        add_header Cross-Origin-Resource-Policy "cross-origin" always;

        # enable rate and connection limiting for file server
        limit_conn fs_conn_total 1000;
        limit_conn fs_conn_per_ip 15;
        limit_req zone=fs_req_total burst=100;
        limit_req zone=fs_req_per_ip burst=20 nodelay;


        # adding proxy headers 
        proxy_set_header X-Forwarded-For $remote_addr; # To forward the original client's IP address
        proxy_set_header X-Forwarded-Proto $scheme; # to forward the  original protocol (HTTP or HTTPS)
        proxy_set_header Host  $http_host; # to forward the original host requested by the client
        proxy_buffer_size                       32k;
        proxy_buffers                           4 32k;

        # redirect request on '/' to '/apis' 
        if ($uri = /) {
                        return 302 $scheme://$http_host/apis;
                }

        location / {
            set $backend_servers tasks.file-server;
	    # set client body size to 1GiB
            client_max_body_size 1024M;
	    # compression is supported in HTTP >=1.1
            proxy_http_version 1.1;
            proxy_pass http://$backend_servers:8080;
        }

}	
