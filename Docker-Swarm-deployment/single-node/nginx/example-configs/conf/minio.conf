upstream minio_s3 {
   least_conn;
   server tasks.minio1:10000;
   server tasks.minio2:10000;
   server tasks.minio3:10000;
   server tasks.minio4:10000;
}

upstream minio_console {
   least_conn;
   server tasks.minio1:10001;
   server tasks.minio2:10001;
   server tasks.minio3:10001;
   server tasks.minio4:10001;
}

    # Main block for Resource server
    server {
        listen 443  ssl;
        http2 on;
        server_name         minio.iudx.io;
        
        ssl_certificate     /etc/nginx/certs/default-ssl/cert.pem;
        ssl_certificate_key /etc/nginx/certs/default-ssl/key.pem;

        # security headers
        add_header Referrer-Policy   "no-referrer-when-downgrade" always;
        add_header X-Frame-Options   "deny" always;
        add_header X-XSS-Protection  "1; mode=block" always;
        add_header X-Permitted-Cross-Domain-Policies  "none" always;
        add_header Cross-Origin-Embedder-Policy "unsafe-none" always;
        add_header Cross-Origin-Resource-Policy "cross-origin" always;
        
        # include error codes 
        include /etc/nginx/error.conf;

        
        
	# enable rate and connection limiting for resource server.
        limit_conn minio_conn_total 2000;
        limit_conn minio_conn_per_ip 150;
        limit_req zone=minio_req_total burst=400;
        limit_req zone=minio_req_per_ip burst=150;

        # adding proxy headers 
        proxy_set_header X-Forwarded-For $remote_addr; # To forward the original client's IP address
        proxy_set_header X-Forwarded-Proto $scheme; # to forward the  original protocol (HTTP or HTTPS)
        proxy_set_header Host  $http_host; # to forward the original host requested by the client
        proxy_buffer_size                       32k;
        proxy_buffers                           4 32k;

        ignore_invalid_headers off;
        client_max_body_size 5G;
        proxy_buffering off;
        proxy_request_buffering off;

        # location ~* \.(png|svg|jpeg|jpg|css)$ {
        #         try_files $uri =404;
        # }

        location / {

                proxy_set_header Host $http_host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;

                # proxy_connect_timeout 300;
                proxy_connect_timeout 600;
                proxy_read_timeout 600;
                proxy_send_timeout 600;
                # Default is HTTP/1, keepalive is only enabled in HTTP/1.1
                proxy_http_version 1.1;
                proxy_set_header Connection "";
                chunked_transfer_encoding off;

                proxy_pass http://minio_s3; # This uses the upstream directive definition to load balance
        }

        location /minio/ui/ {

                rewrite ^/minio/ui/(.*) /$1 break;
                proxy_set_header Host $http_host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_set_header X-NginX-Proxy true;

                # This is necessary to pass the correct IP to be hashed
                real_ip_header X-Real-IP;

                proxy_connect_timeout 300;

                # To support websockets in MinIO versions released after January 2023
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
                # Some environments may encounter CORS errors (Kubernetes + Nginx Ingress)
                # Uncomment the following line to set the Origin request to an empty string
                # proxy_set_header Origin '';

                chunked_transfer_encoding off;

                proxy_pass http://minio_console; # This uses the upstream directive definition to load balance
        }
}