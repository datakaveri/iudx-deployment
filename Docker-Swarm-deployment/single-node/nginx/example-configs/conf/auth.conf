    # Main block for auth server
    server {
        listen 443  ssl http2 ;
        server_name         auth.io.test;

        ssl_certificate     /etc/nginx/certs/default-ssl/cert.pem;
        ssl_certificate_key /etc/nginx/certs/default-ssl/key.pem;

        ssl_stapling on;
        # ssl_session_cache  builtin:1000  shared:SSL:10m;

        # gzip settings
        gzip on;
        gzip_types application/json;
        gzip_proxied any;
        gzip_min_length 1000; # gzip performed when Content-Length > 1000 bytes

        # include error codes
        include /etc/nginx/error.conf;

        # enable rate and connection limiting for auth server.
        limit_conn auth_conn_total 2000;
        limit_conn auth_conn_per_ip 150;
        limit_req zone=auth_req_total burst=400;
        limit_req zone=auth_req_per_ip burst=150;

        add_header Strict-Transport-Security "max-age=63072000" always;
        add_header Cache-Control "no-cache, no-store, must-revalidate";


        # adding proxy headers
        proxy_set_header X-Forwarded-For $remote_addr; # To forward the original client's IP address
        proxy_set_header X-Forwarded-Proto $scheme; # to forward the  original protocol (HTTP or HTTPS)
        proxy_set_header Host  $http_host; # to forward the original host requested by the client
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header        X-Forwarded-Proto $scheme;
        proxy_buffer_size                       32k;
        proxy_buffers                           4 32k;

        # redirect request on '/' to '/apis'
        if ($uri = /) {
                        return 302 $scheme://$http_host/apis;
                }



        location / {
            set $backend_servers tasks.auth;
            # compression is supported in HTTP >=1.1
            proxy_http_version 1.1;
            proxy_pass http://$backend_servers:8080;
        }
}
