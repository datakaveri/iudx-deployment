# Main block for cos api servers
server {
    listen 443  ssl;
    http2 on ;
    server_name         cos.io.test;
    ssl_certificate     /etc/nginx/certs/default-ssl/cert.pem;
    ssl_certificate_key /etc/nginx/certs/default-ssl/key.pem;

    # include error codes 
    include /etc/nginx/error.conf;

    # include security headers
    add_header Referrer-Policy   "no-referrer-when-downgrade" always;
    add_header X-Frame-Options   "deny" always;
    add_header X-XSS-Protection  "1; mode=block" always;
    add_header X-Permitted-Cross-Domain-Policies  "none" always;
    add_header Cross-Origin-Embedder-Policy "require-corp" always;
    add_header Cross-Origin-Resource-Policy "cross-origin" always;

    # adding proxy headers
    proxy_set_header X-Forwarded-For $remote_addr; # To forward the original client's IP address
    proxy_set_header X-Forwarded-Proto $scheme; # to forward the  original protocol (HTTP or HTTPS)
    proxy_set_header Host  $http_host; # to forward the original host requested by the client
    proxy_buffer_size                       32k;
    proxy_buffers                           4 32k;

    # serve static page at root path with /apis endpoint documentation
    root /etc/nginx/http/html;

    location / {
        # enable rate and connection limiting for cos root
        limit_conn cos_conn_total 500;
        limit_conn cos_conn_per_ip 50;
        limit_req zone=cos_req_total burst=100;
        limit_req zone=cos_req_per_ip burst=20;

        index index.html
        try_files $uri $uri/ /index.html;
    }

    location /auth/apis/spec {
        set $target_destination '/auth';
        set $original_uri '/apis/spec';
        rewrite ^ $target_destination last;
    }
    location /cat/apis/spec {
        set $target_destination '/cat';
        set $original_uri '/apis/spec';
        rewrite ^ $target_destination last;
    }
    location /onboarding/apis/spec {
        set $target_destination '/onb';
        set $original_uri '/apis/spec';
        rewrite ^ $target_destination last;
    }
    location /auth/apis {
        set $target_destination '/auth';
        set $original_uri '/apis';
        rewrite ^ $target_destination last;
    }
    location /cat/apis {
        set $target_destination '/cat';
        set $original_uri '/apis';
        rewrite ^ $target_destination last;
    }
    location /onboarding/apis {
        set $target_destination '/onb';
        set $original_uri '/apis';
        rewrite ^ $target_destination last;
    }
    location /iudx/cat/v1/item {
        if ($request_method != GET) {
            set $target_destination '/onb';
        }
        if ($request_method = GET) {
            set $target_destination '/cat';
        }
        set $original_uri $uri;
        rewrite ^ $target_destination last;
    }
    location /iudx/cat/v1/search {
        set $target_destination '/cat';
        set $original_uri $uri;
        rewrite ^ $target_destination last;
    }
    location /iudx/cat/v1/count {
        set $target_destination '/cat';
        set $original_uri $uri;
        rewrite ^ $target_destination last;
    }
    location /iudx/cat/v1/geo {
        set $target_destination '/cat';
        set $original_uri $uri;
        rewrite ^ $target_destination last;
    }
    location /iudx/cat/v1/list {
        set $target_destination '/cat';
        set $original_uri $uri;
        rewrite ^ $target_destination last;
    }
    location /iudx/cat/v1/relsearch {
        set $target_destination '/cat';
        set $original_uri $uri;
        rewrite ^ $target_destination last;
    }
    location /iudx/cat/v1/relationship {
        set $target_destination '/cat';
        set $original_uri $uri;
        rewrite ^ $target_destination last;
    }
    location /iudx/cat/v1/instance {
        set $target_destination '/cat';
        set $original_uri $uri;
        rewrite ^ $target_destination last;
    }
    location /consumer/ratings {
        set $target_destination '/cat';
        set $original_uri $uri;
        rewrite ^ $target_destination last;
    }
    location  /iudx/cat/v1/internal/ui/geoquery {
        set $target_destination '/cat';
        set $original_uri $uri;
        rewrite ^ $target_destination last;
    }
    
    location  /iudx/cat/v1/internal/ui/providers {
        set $target_destination '/cat';
        set $original_uri $uri;
        rewrite ^ $target_destination last;
    }
    location  /iudx/cat/v1/internal/ui/popularDatasets {
        set $target_destination '/cat';
        set $original_uri $uri;
        rewrite ^ $target_destination last;
    }
    location  /iudx/cat/v1/internal/ui/instance {
        if ($request_method != GET) {
            set $target_destination '/onb';
        }
        if ($request_method = GET) {
            set $target_destination '/cat';
        }
        set $original_uri $uri;
        rewrite ^ $target_destination last;
    }
    location  /iudx/cat/v1/internal/ui/domain {
        if ($request_method != GET) {
            set $target_destination '/onb';
        }
        if ($request_method = GET) {
            set $target_destination '/cat';
        }
        set $original_uri $uri;
        rewrite ^ $target_destination last;
    }
    location  /iudx/cat/v1/internal/ui/dataset {
        set $target_destination '/cat';
        set $original_uri $uri;
        rewrite ^ $target_destination last;
    }
    location  /iudx/cat/v1/nlpsearch {
        set $target_destination '/cat';
        set $original_uri $uri;
        rewrite ^ $target_destination last;
    }
    location /auth/v1 {
        set $target_destination '/auth';
        set $original_uri $uri;
        rewrite ^ $target_destination last;
    }
    
    if ($uri = /) {
        return 302 $scheme://$http_host/apis;
    }

    # Path based routing for Catalogue server endpoints
    location /cat{
        set $backend_servers tasks.cat;
        # enable rate and connection limiting for catalogue
        limit_conn cat_conn_total 2000;
        limit_conn cat_conn_per_ip 150;     
        limit_req zone=cat_req_total burst=400;
        limit_req zone=cat_req_per_ip burst=150;
        internal;
        rewrite ^ $original_uri break;
        # compression is supported in HTTP >=1.1
        proxy_http_version 1.1;
        proxy_pass http://$backend_servers:8080;
    }

    # Path based routing for Authorization server endpoints
    location /auth {
        set $backend_servers tasks.auth;
        # enable rate and connection limiting for auth server.
        limit_conn auth_conn_total 2000;
        limit_conn auth_conn_per_ip 150;
        limit_req zone=auth_req_total burst=400;
        limit_req zone=auth_req_per_ip burst=150;
        internal;
        rewrite ^ $original_uri break;
        # compression is supported in HTTP >=1.1
        proxy_http_version 1.1;
        proxy_pass http://$backend_servers:8080;
    }

    # Path based routing for Onboarding server endpoints
    location /onb {
        set $backend_servers tasks.onboarding-server;
        # enable rate and connection limiting for onboarding server.
        limit_conn onb_conn_total 2000;
        limit_conn onb_conn_per_ip 150;
        limit_req zone=onb_req_total burst=400;
        limit_req zone=onb_req_per_ip burst=150;
        # compression is supported in HTTP >=1.1
        proxy_http_version 1.1;
        internal;
        rewrite ^ $original_uri break;
        proxy_pass http://$backend_servers:8080;
    }


}
