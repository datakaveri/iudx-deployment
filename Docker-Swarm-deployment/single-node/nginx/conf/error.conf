error_page 300 /300.json;
error_page 301 /301.json;
error_page 302 /302.json;
error_page 303 /303.json;
error_page 304 /304.json;
error_page 305 /305.json;
error_page 307 /307.json;
error_page 308 /308.json;
error_page 400 /400.json;
error_page 401 /401.json;
error_page 402 /402.json;
error_page 403 /403.json;
error_page 404 /404.json;
error_page 405 /405.json;
error_page 406 /406.json;
error_page 407 /407.json;
error_page 408 /408.json;
error_page 409 /409.json;
error_page 410 /410.json;
error_page 411 /411.json;
error_page 412 /412.json;
error_page 413 /413.json;
error_page 414 /414.json;
error_page 415 /415.json;
error_page 416 /416.json;
error_page 417 /417.json;
error_page 421 /421.json;
error_page 422 /422.json;
error_page 423 /423.json;
error_page 424 /424.json;
error_page 426 /426.json;
error_page 428 /428.json;
error_page 429 /429.json;
error_page 494  =431 /431.json;
error_page 500 /500.json;
error_page 501 /501.json;
error_page 502 /502.json;
error_page 503 /503.json;
error_page 504 /504.json;
error_page 505 /505.json;
error_page 506 /506.json;
error_page 507 /507.json;
error_page 508 /508.json;
error_page 510 /510.json;
error_page 511 /511.json;

location /300.json {
    types {}
    internal;
    default_type application/json;
    return 300 '{"type":300,"title":"Multiple Choices","detail":"Object has several resources -- see URI list"}';
}

location /301.json {
    types {}
    internal;
    default_type application/json;
    return 200 '{"type":301,"title":"Moved Permanently","detail":"Object moved permanently -- see URI list"}';
}

location /302.json {
    types {}
    internal;
    default_type application/json;
    return 200 '{"type":302,"title":"Found","detail":"Object moved temporarily -- see URI list"}';
}

location /303.json {
    types {}
    internal;
    default_type application/json;
    return 200 '{"type":303,"title":"See Other","detail":"Object moved -- see Method and URL list"}';
}

location /304.json {
    types {}
    internal;
    default_type application/json;
    return 304 '{"type":304,"title":"Not Modified","detail":"Document has not changed since given time"}';
}

location /305.json {
    types {}
    internal;
    default_type application/json;
    return 305 '{"type":305,"title":"Use Proxy","detail":"You must use proxy specified in Location to access this resource"}';
}

location /307.json {
    types {}
    internal;
    default_type application/json;
    return 200 '{"type":307,"title":"Temporary Redirect","detail":"Object moved temporarily -- see URI list"}';
}

location /308.json {
    types {}
    internal;
    default_type application/json;
    return 200 '{"type":308,"title":"Permanent Redirect","detail":"Object moved permanently -- see URI list"}';
}

location /400.json {
    types {}
    internal;
    default_type application/json;
    return 400 '{"type":400,"title":"Bad Request","detail":"Bad request syntax or unsupported method"}';
}

location /401.json {
    types {}
    internal;
    default_type application/json;
    return 401 '{"type":401,"title":"Unauthorized","detail":"No permission -- see authorization schemes"}';
}

location /402.json {
    types {}
    internal;
    default_type application/json;
    return 402 '{"type":402,"title":"Payment Required","detail":"No payment -- see charging schemes"}';
}

location /403.json {
    types {}
    internal;
    default_type application/json;
    return 403 '{"type":403,"title":"Forbidden","detail":"Request forbidden -- authorization will not help"}';
}

location /404.json {
    types {}
    internal;
    default_type application/json;
    return 404 '{"type":404,"title":"Not Found","detail":"Nothing matches the given URI"}';
}

location /405.json {
    types {}
    internal;
    default_type application/json;
    return 405 '{"type":405,"title":"Method Not Allowed","detail":"Specified method is invalid for this resource"}';
}

location /406.json {
    types {}
    internal;
    default_type application/json;
    return 406 '{"type":406,"title":"Not Acceptable","detail":"URI not available in preferred format"}';
}

location /407.json {
    types {}
    internal;
    default_type application/json;
    return 407 '{"type":407,"title":"Proxy Authentication Required","detail":"You must authenticate with this proxy before proceeding"}';
}

location /408.json {
    types {}
    internal;
    default_type application/json;
    return 408 '{"type":408,"title":"Request Timeout","detail":"Request timed out; try again later"}';
}

location /409.json {
    types {}
    internal;
    default_type application/json;
    return 409 '{"type":409,"title":"Conflict","detail":"Request conflict"}';
}

location /410.json {
    types {}
    internal;
    default_type application/json;
    return 410 '{"type":410,"title":"Gone","detail":"URI no longer exists and has been permanently removed"}';
}

location /411.json {
    types {}
    internal;
    default_type application/json;
    return 411 '{"type":411,"title":"Length Required","detail":"Client must specify Content-Length"}';
}

location /412.json {
    types {}
    internal;
    default_type application/json;
    return 412 '{"type":412,"title":"Precondition Failed","detail":"Precondition in headers is false"}';
}

location /413.json {
    types {}
    internal;
    default_type application/json;
    return 413 '{"type":413,"title":"Request Entity Too Large","detail":"Entity is too large"}';
}

location /414.json {
    types {}
    internal;
    default_type application/json;
    return 414 '{"type":414,"title":"Request-URI Too Long","detail":"URI is too long"}';
}

location /415.json {
    types {}
    internal;
    default_type application/json;
    return 415 '{"type":415,"title":"Unsupported Media Type","detail":"Entity body in unsupported format"}';
}

location /416.json {
    types {}
    internal;
    default_type application/json;
    return 416 '{"type":416,"title":"Requested Range Not Satisfiable","detail":"Cannot satisfy request range"}';
}

location /417.json {
    types {}
    internal;
    default_type application/json;
    return 417 '{"type":417,"title":"Expectation Failed","detail":"Expect condition could not be satisfied"}';
}

location /421.json {
    types {}
    internal;
    default_type application/json;
    return 421 '{"type":421,"title":"Misdirected Request","detail":"Server is not able to produce a response"}';
}

location /422.json {
    types {}
    internal;
    default_type application/json;
    return 422 '{"type":422,"title":"Unprocessable Entity","detail":""}';
}

location /423.json {
    types {}
    internal;
    default_type application/json;
    return 423 '{"type":423,"title":"Locked","detail":""}';
}

location /424.json {
    types {}
    internal;
    default_type application/json;
    return 424 '{"type":424,"title":"Failed Dependency","detail":""}';
}

location /426.json {
    types {}
    internal;
    default_type application/json;
    return 426 '{"type":426,"title":"Upgrade Required","detail":""}';
}

location /428.json {
    types {}
    internal;
    default_type application/json;
    return 428 '{"type":428,"title":"Precondition Required","detail":"The origin server requires the request to be conditional"}';
}

location /429.json {
    types {}
    internal;
    default_type application/json;
    return 429 '{"type":429,"title":"Too Many Requests","detail":"The user has sent too many requests in a given amount of time (\'rate limiting\')"}';
}

location /431.json {
    types {}
    internal;
    default_type application/json;
    return 431 '{"type":431,"title":"Request Header Fields Too Large","detail":"The server is unwilling to process the request because its header fields are too large"}';
}

location /500.json {
    types {}
    internal;
    default_type application/json;
    return 500 '{"type":500,"title":"Internal Server Error","detail":"Server got itself in trouble"}';
}

location /501.json {
    types {}
    internal;
    default_type application/json;
    return 501 '{"type":501,"title":"Not Implemented","detail":"Server does not support this operation"}';
}

location /502.json {
    types {}
    internal;
    default_type application/json;
    return 502 '{"type":502,"title":"Bad Gateway","detail":"Invalid responses from another server/proxy"}';
}

location /503.json {
    types {}
    internal;
    default_type application/json;
    return 503 '{"type":503,"title":"Service Unavailable","detail":"The server cannot process the request due to a high load"}';
}

location /504.json {
    types {}
    internal;
    default_type application/json;
    return 504 '{"type":504,"title":"Gateway Timeout","detail":"The gateway server did not receive a timely response"}';
}

location /505.json {
    types {}
    internal;
    default_type application/json;
    return 505 '{"type":505,"title":"HTTP Version Not Supported","detail":"Cannot fulfill request"}';
}

location /506.json {
    types {}
    internal;
    default_type application/json;
    return 506 '{"type":506,"title":"Variant Also Negotiates","detail":""}';
}

location /507.json {
    types {}
    internal;
    default_type application/json;
    return 507 '{"type":507,"title":"Insufficient Storage","detail":""}';
}

location /508.json {
    types {}
    internal;
    default_type application/json;
    return 508 '{"type":508,"title":"Loop Detected","detail":""}';
}

location /510.json {
    types {}
    internal;
    default_type application/json;
    return 510 '{"type":510,"title":"Not Extended","detail":""}';
}

location /511.json {
    types {}
    internal;
    default_type application/json;
    return 511 '{"type":511,"title":"Network Authentication Required","detail":"The client needs to authenticate to gain network access"}';
}
