version: "3.9"

networks:
  overlay-net:
    external: true
    driver: overlay

services:
  elasticsearch:
    image: docker.io/bitnami/elasticsearch:8.12.1-debian-11-r17
    deploy:
      replicas: 1
      placement:
        constraints:
          - "node.labels.database_node==true"
      restart_policy:
        condition: on-failure
        delay: 5s
        window: 10s
    networks:
      - overlay-net
    env_file:
      - secrets/passwords/es-password.env
      - secrets/passwords/snapshot-credentials.env
    environment:
      - ELASTICSEARCH_ENABLE_SECURITY=true
      - ELASTICSEARCH_TLS_VERIFICATION_MODE=certificate
      - ELASTICSEARCH_KEYSTORE_LOCATION=/opt/bitnami/elasticsearch/config/certs/elastic-certificates.p12
      - ELASTICSEARCH_TRUSTSTORE_LOCATION=/opt/bitnami/elasticsearch/config/certs/elastic-certificates.p12
      - ELASTICSEARCH_ENABLE_REST_TLS=false
    configs:
      - source: elasticsearch-config
        target: /opt/bitnami/elasticsearch/config/my_elasticsearch.yml
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "3"
        tag: "{\"name\":\"{{.Name}}\",\"id\":\"{{.ID}}\"}"
    volumes:
      - type: volume
        source: elastic-update-volume
        target: /bitnami/elasticsearch/data
    secrets:
      - source: elastic.certificates
        target: /opt/bitnami/elasticsearch/config/certs/elastic-certificates.p12 

  kibana:
    image: docker.io/bitnami/kibana:8.12.1-debian-11-r17
    deploy:
      replicas: 1
      placement:
        constraints:
          - "node.labels.database_node==true"
      restart_policy:
        condition: on-failure
        delay: 5s
        window: 10s
    cap_drop:
      - ALL
    networks:
      - overlay-net
    environment:
      - KIBANA_ELASTICSEARCH_URL=http://elasticsearch:9200
      - KIBANA_ELASTICSEARCH_PORT_NUMBER=9200
      - KIBANA_PORT_NUMBER=5601
      - KIBANA_ELASTICSEARCH_ENABLE_TLS=false
      - KIBANA_ELASTICSEARCH_TLS_USE_PEM=false
      - KIBANA_ELASTICSEARCH_TLS_VERIFICATION_MODE=none
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "3"
        tag: "{\"name\":\"{{.Name}}\",\"id\":\"{{.ID}}\"}"
    configs:
      - source: kibana-config
        target: /bitnami/kibana/conf/kibana.yml
    secrets:
      - source: kibana.keystore
        target: /opt/bitnami/kibana/config/kibana.keystore

  logstash:
    image: docker.io/bitnami/logstash:8.12.1-debian-11-r17
    deploy:
      replicas: 1
      placement:
        constraints:
          - "node.labels.database_node==true"
      restart_policy:
        condition: on-failure
        delay: 5s
        window: 10s
    cap_drop:
      - ALL
    volumes:
      - type: volume
        source: logstash-update-volume
        target: /opt/bitnami/logstash/data
    env_file:
        - ./secrets/.logstash.env
    environment:
      - BITNAMI_DEBUG=false
      - LOGSTASH_ENABLE_MULTIPLE_PIPELINES=yes
      - LOGSTASH_EXPOSE_API=yes
      - LOGSTASH_API_PORT_NUMBER=9600
      - LOGSTASH_DATA_DIR=/opt/bitnami/logstash/data
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "3"
        tag: "{\"name\":\"{{.Name}}\",\"id\":\"{{.ID}}\"}"
    networks:
      - overlay-net
    secrets:
      - source: logstash.keystore
        target: /opt/bitnami/logstash/config/logstash.keystore
    configs:
      - source: logstash-pipelines
        target: /bitnami/logstash/config/pipelines.yaml
      - source: logstash-settings
        target: /bitnami/logstash/config/logstash.yaml
      - source: logstash-resource-group-pipeline
        target: /bitnami/logstash/pipeline/resource-group.conf

secrets:
  kibana.keystore:
    file: secrets/keystores/kibana.keystore
  logstash.keystore:
    file: secrets/keystores/logstash.keystore
  elastic.certificates:
    file: secrets/pki/elastic-certificates.p12

volumes:
  elastic-update-volume:
  logstash-update-volume:

configs:
  elasticsearch-config:
    file: elasticsearch/elasticsearch.yaml
  logstash-pipelines:
    file: logstash/settings/pipelines.yaml
  logstash-settings:
    file: logstash/settings/logstash.yaml
  logstash-resource-group-pipeline:
    file: logstash/pipeline/resource-group.cfg
  kibana-config:
    file: kibana/kibana.yaml
