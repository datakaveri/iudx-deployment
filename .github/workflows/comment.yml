name: Test Resource Server

on:
  pull_request:
    types: [opened, synchronize]
#on:
 # issue_comment:
  #  types: [created,]

jobs:
  test_job:
    runs-on: ubuntu-latest

    #if: contains(github.event.comment.body, '/test_rs') 
    env:
      RESOURCE_VALUES: ${{ secrets.RESOURCE_VALUES }}
    steps:
    - name: Checkout PR code
      uses: actions/checkout@v3
      with:
        repository: ${{ github.event.pull_request.head.repo.clone_url }}
        ref: ${{ github.event.pull_request.head.ref }}

    - name: List Files
      run: |
          pwd
          ls -a
          ls .github/workflows
          git branch
          echo $GITHUB_REPOSITORY
          echo $GITHUB_WORKSPACE
          env
    - name: Dump context
      run: echo '${{ toJSON(github.event) }}' | jq
      shell: bash
      
    - name: Install kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'v1.24.8'
        kubeconfig: ${{ secrets.KUBE_CONFIG }}
      id: install
      
    - name: Install Helm
      uses: azure/setup-helm@v3
      with:
         token: ${{ github.token }}

    ##- name: Download Testkube CLI
    ##   run: curl -sL https://testkube.com/install | sh -
      
   ## - name: testkube
   ##   uses: kubeshop/testkube-docker-action@v1

    - name: configure resource server and deploy
      run: |
        cp -r K8s-deployment/Charts/resource-server/example-secrets/* K8s-deployment/Charts/resource-server/
        echo "${{ secrets.RESOURCE_VALUES }}" | base64 --decode > K8s-deployment/Charts/resource-server/resource-values.yaml
        echo "${{ secrets.AWS_SECRET_ACCESS_KEY }}" | base64 --decode > K8s-deployment/Charts/resource-server/secrets/AWS_SECRET_ACCESS_KEY
        echo "${{ secrets.AWS_ACCESS_KEY_ID }}" | base64 --decode > K8s-deployment/Charts/resource-server/secrets/AWS_ACCESS_KEY_ID
        echo "${{ secrets.RS_CONFIG }}" | base64 --decode > K8s-deployment/Charts/resource-server/secrets/config.json
        ./K8s-deployment/Charts/resource-server/install.sh
