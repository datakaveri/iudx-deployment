name: Test Resource Server

on:
  pull_request_target:
    types: [opened, reopened, synchronize]
  #issue_comment:
   # types: [created]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Debug info
      run: |
        echo "Clone URL: ${{ github.event.pull_request.head.repo.clone_url }}"
        echo "Branch name: ${{ github.event.pull_request.head.ref }}"
        echo "repository: ${{ github.event.pull_request.head.repo.owner.login }}/${{ github.event.pull_request.head.repo.name }}"
        echo "${{ secrets.RESOURCE_VALUES }}" > RESOURCE_VALUES.yaml
        cat RESOURCE_VALUES.yaml
        
    - name: Dump context
      run: echo '${{ toJSON(github.event) }}' | jq
      shell: bash
      
    - name: Checkout PR code
      uses: actions/checkout@v3
      with:
        repository: ${{ github.event.pull_request.head.repo.owner.login }}/${{ github.event.pull_request.head.repo.name }}
        ref: ${{ github.event.pull_request.head.ref }}       
        
    - name: List Files
      run: |
          pwd
          ls -a
          ls .github/workflows
          git branch
          echo $GITHUB_REPOSITORY
          echo $GITHUB_WORKSPACE
          env
    
      
    - name: Install kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'v1.24.8'
        kubeconfig: ${{ secrets.KUBE_CONFIG }}
      id: install
      
    - name: Install Helm
      uses: azure/setup-helm@v3
      with:
         token: ${{ github.token }}

    ##- name: Download Testkube CLI
    ##   run: curl -sL https://testkube.com/install | sh -
      
   ## - name: testkube
   ##   uses: kubeshop/testkube-docker-action@v1


    - name: configure resource server and deploy
      run: |
        cp -r K8s-deployment/Charts/resource-server/example-secrets/* K8s-deployment/Charts/resource-server/
        echo "${{ secrets.RESOURCE_VALUES }}" > K8s-deployment/Charts/resource-server/resource-values.yaml
        echo "${{ secrets.AWS_SECRET_ACCESS_KEY }}"  > K8s-deployment/Charts/resource-server/secrets/AWS_SECRET_ACCESS_KEY
        echo "${{ secrets.AWS_ACCESS_KEY_ID }}" > K8s-deployment/Charts/resource-server/secrets/AWS_ACCESS_KEY_ID
        echo "${{ secrets.RS_CONFIG }}" > K8s-deployment/Charts/resource-server/secrets/config.json
        ./K8s-deployment/Charts/resource-server/install.sh
