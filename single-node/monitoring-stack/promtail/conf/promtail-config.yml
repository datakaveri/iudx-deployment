server:
  disable: true
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /var/log/positions.yml
  
clients:
  - url: http://tasks.loki:3100/loki/api/v1/push
  
scrape_configs:
 #----------------- other-container-logs(except rs,cat,auth) --------------------------------------------
- job_name: container
  static_configs:
  - targets:
    labels:
      job: other-container-logs
      __path__: /var/lib/docker/containers/*/*-json.log  
  pipeline_stages:

#parsing docker json
  - json: 
      expressions:
        log: log
        stream: stream
        docker_time: time
        container_info: attrs.tag

  - json: 
      expressions:
        container_name: name
        instance: id
      source: container_info

  - labels:
      instance:
      container_name:

  - match: 
      selector: '{container_name=~"iudx-(catalogue|resource)-server\\w+"}'
      action : drop
  - match: 
      selector: '{container_name=~"database_logstash.*.*"}|~ "WARN"'
      stages:
      - json:     
          expressions:
            index: logEvent.action[2].metaClass.metaClass.metaClass.response.index._index
            error_type: logEvent.action[2].metaClass.metaClass.metaClass.response.index.error.type
          source: log
      - labels:
          index:
          error_type:
      
  - output:
      source: log

  - timestamp:
      source: docker_time
      format: RFC3339

#-----------------------------------------authorisation logs-------------------------------------
- job_name: system_auth
  static_configs:
  - targets:
    labels: 
      job: auth-logs  # A `job` label is fairly standard in prometheus and useful for linking metrics and logs.
      host: authorization-node # A `host` label will help identify logs from this machine vs others
      __path__: /var/log/debug.log  # The path matching uses a third party library: https://github.com/bmatcuk/doublestar
      source: auth
      sourceUrl: authorization.iudx.org.in        #mention url of auth
  pipeline_stages:
  - match:
      selector: '{job="auth-logs"}'
      stages:
      - json:
          expressions:
            level: level
            type: type
            notify: notify
            details: details
      - labels:
          level:
          type:
  #-------------------------------  cat&rs server logs----------------------------------------------
- job_name: system_cat&rs
  static_configs:
  - targets:
    labels: 
      job: cat&rs-logs  
      __path__: /tmp/iudx/*.log
  pipeline_stages:
  - match:
      selector: '{filename="/tmp/iudx/cat.log"}'
      stages:
      - labels: 
          host: catalogue-node
  - match:
      selector: '{filename="/tmp/iudx/rs.log"}'
      stages:
      - labels: 
          host: resource-server-node
  - json:
      expressions:
        time: timeMillis
        source: source
        sourceUrl: sourceURL
        level: level
        origin: loggerName #class from which its logged
        message: message
  - labels:
      source:
      sourceUrl:
      #level:        # level will create more streams, 5x times
      #origin:
  - timestamp:
      source: time
      format: UnixMs

 
 
